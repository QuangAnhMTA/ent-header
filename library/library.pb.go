// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: library.proto

package library

import (
	transaction "github.com/QuangAnhMTA/ent-header/transaction"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Course_Status int32

const (
	Course_default_state Course_Status = 0
	Course_deactive      Course_Status = 1
	Course_active        Course_Status = 2
)

// Enum value maps for Course_Status.
var (
	Course_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Course_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Course_Status) Enum() *Course_Status {
	p := new(Course_Status)
	*p = x
	return p
}

func (x Course_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Course_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[0].Descriptor()
}

func (Course_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[0]
}

func (x Course_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Course_Status.Descriptor instead.
func (Course_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{2, 0}
}

type Document_Status int32

const (
	Document_default_state Document_Status = 0
	Document_deactive      Document_Status = 1
	Document_active        Document_Status = 2
)

// Enum value maps for Document_Status.
var (
	Document_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Document_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Document_Status) Enum() *Document_Status {
	p := new(Document_Status)
	*p = x
	return p
}

func (x Document_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Document_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[1].Descriptor()
}

func (Document_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[1]
}

func (x Document_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Document_Status.Descriptor instead.
func (Document_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{5, 0}
}

type Paragraph_Type int32

const (
	Paragraph_default_type     Paragraph_Type = 0
	Paragraph_normal_paragraph Paragraph_Type = 1
	Paragraph_conversation     Paragraph_Type = 2
	Paragraph_quiz             Paragraph_Type = 3
	Paragraph_image_paragraph  Paragraph_Type = 4
)

// Enum value maps for Paragraph_Type.
var (
	Paragraph_Type_name = map[int32]string{
		0: "default_type",
		1: "normal_paragraph",
		2: "conversation",
		3: "quiz",
		4: "image_paragraph",
	}
	Paragraph_Type_value = map[string]int32{
		"default_type":     0,
		"normal_paragraph": 1,
		"conversation":     2,
		"quiz":             3,
		"image_paragraph":  4,
	}
)

func (x Paragraph_Type) Enum() *Paragraph_Type {
	p := new(Paragraph_Type)
	*p = x
	return p
}

func (x Paragraph_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Paragraph_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[2].Descriptor()
}

func (Paragraph_Type) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[2]
}

func (x Paragraph_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Paragraph_Type.Descriptor instead.
func (Paragraph_Type) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{8, 0}
}

type Paragraph_Approved int32

const (
	Paragraph_default_approved Paragraph_Approved = 0
	Paragraph_not_approved     Paragraph_Approved = 1
	Paragraph_yes_approved     Paragraph_Approved = 2
	Paragraph_again_approved   Paragraph_Approved = 3
)

// Enum value maps for Paragraph_Approved.
var (
	Paragraph_Approved_name = map[int32]string{
		0: "default_approved",
		1: "not_approved",
		2: "yes_approved",
		3: "again_approved",
	}
	Paragraph_Approved_value = map[string]int32{
		"default_approved": 0,
		"not_approved":     1,
		"yes_approved":     2,
		"again_approved":   3,
	}
)

func (x Paragraph_Approved) Enum() *Paragraph_Approved {
	p := new(Paragraph_Approved)
	*p = x
	return p
}

func (x Paragraph_Approved) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Paragraph_Approved) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[3].Descriptor()
}

func (Paragraph_Approved) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[3]
}

func (x Paragraph_Approved) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Paragraph_Approved.Descriptor instead.
func (Paragraph_Approved) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{8, 1}
}

type Paragraph_Status int32

const (
	Paragraph_default_state Paragraph_Status = 0
	Paragraph_deactive      Paragraph_Status = 1
	Paragraph_active        Paragraph_Status = 2
)

// Enum value maps for Paragraph_Status.
var (
	Paragraph_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Paragraph_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Paragraph_Status) Enum() *Paragraph_Status {
	p := new(Paragraph_Status)
	*p = x
	return p
}

func (x Paragraph_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Paragraph_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[4].Descriptor()
}

func (Paragraph_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[4]
}

func (x Paragraph_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Paragraph_Status.Descriptor instead.
func (Paragraph_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{8, 2}
}

type Paragraph_ProcessAudio int32

const (
	Paragraph_default_process_audio Paragraph_ProcessAudio = 0
	Paragraph_no_process            Paragraph_ProcessAudio = 1
	Paragraph_processing            Paragraph_ProcessAudio = 2
	Paragraph_done                  Paragraph_ProcessAudio = 3
)

// Enum value maps for Paragraph_ProcessAudio.
var (
	Paragraph_ProcessAudio_name = map[int32]string{
		0: "default_process_audio",
		1: "no_process",
		2: "processing",
		3: "done",
	}
	Paragraph_ProcessAudio_value = map[string]int32{
		"default_process_audio": 0,
		"no_process":            1,
		"processing":            2,
		"done":                  3,
	}
)

func (x Paragraph_ProcessAudio) Enum() *Paragraph_ProcessAudio {
	p := new(Paragraph_ProcessAudio)
	*p = x
	return p
}

func (x Paragraph_ProcessAudio) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Paragraph_ProcessAudio) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[5].Descriptor()
}

func (Paragraph_ProcessAudio) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[5]
}

func (x Paragraph_ProcessAudio) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Paragraph_ProcessAudio.Descriptor instead.
func (Paragraph_ProcessAudio) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{8, 3}
}

type Sentence_Status int32

const (
	Sentence_default_state Sentence_Status = 0
	Sentence_deactive      Sentence_Status = 1
	Sentence_active        Sentence_Status = 2
)

// Enum value maps for Sentence_Status.
var (
	Sentence_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Sentence_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Sentence_Status) Enum() *Sentence_Status {
	p := new(Sentence_Status)
	*p = x
	return p
}

func (x Sentence_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sentence_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[6].Descriptor()
}

func (Sentence_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[6]
}

func (x Sentence_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sentence_Status.Descriptor instead.
func (Sentence_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{11, 0}
}

type Audio_Status int32

const (
	Audio_default_state Audio_Status = 0
	Audio_deactive      Audio_Status = 1
	Audio_active        Audio_Status = 2
)

// Enum value maps for Audio_Status.
var (
	Audio_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Audio_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Audio_Status) Enum() *Audio_Status {
	p := new(Audio_Status)
	*p = x
	return p
}

func (x Audio_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audio_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[7].Descriptor()
}

func (Audio_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[7]
}

func (x Audio_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Audio_Status.Descriptor instead.
func (Audio_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{14, 0}
}

type SearchEngine_Status int32

const (
	SearchEngine_default_state SearchEngine_Status = 0
	SearchEngine_deactive      SearchEngine_Status = 1
	SearchEngine_active        SearchEngine_Status = 2
)

// Enum value maps for SearchEngine_Status.
var (
	SearchEngine_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	SearchEngine_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x SearchEngine_Status) Enum() *SearchEngine_Status {
	p := new(SearchEngine_Status)
	*p = x
	return p
}

func (x SearchEngine_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchEngine_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[8].Descriptor()
}

func (SearchEngine_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[8]
}

func (x SearchEngine_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchEngine_Status.Descriptor instead.
func (SearchEngine_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{19, 0}
}

type SentencePos_Status int32

const (
	SentencePos_default_state SentencePos_Status = 0
	SentencePos_deactive      SentencePos_Status = 1
	SentencePos_active        SentencePos_Status = 2
)

// Enum value maps for SentencePos_Status.
var (
	SentencePos_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	SentencePos_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x SentencePos_Status) Enum() *SentencePos_Status {
	p := new(SentencePos_Status)
	*p = x
	return p
}

func (x SentencePos_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SentencePos_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[9].Descriptor()
}

func (SentencePos_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[9]
}

func (x SentencePos_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SentencePos_Status.Descriptor instead.
func (SentencePos_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{22, 0}
}

type Mean_Status int32

const (
	Mean_default_state Mean_Status = 0
	Mean_deactive      Mean_Status = 1
	Mean_active        Mean_Status = 2
)

// Enum value maps for Mean_Status.
var (
	Mean_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Mean_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Mean_Status) Enum() *Mean_Status {
	p := new(Mean_Status)
	*p = x
	return p
}

func (x Mean_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mean_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[10].Descriptor()
}

func (Mean_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[10]
}

func (x Mean_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mean_Status.Descriptor instead.
func (Mean_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{25, 0}
}

type Translation_Status int32

const (
	Translation_default_state Translation_Status = 0
	Translation_deactive      Translation_Status = 1
	Translation_active        Translation_Status = 2
)

// Enum value maps for Translation_Status.
var (
	Translation_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Translation_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Translation_Status) Enum() *Translation_Status {
	p := new(Translation_Status)
	*p = x
	return p
}

func (x Translation_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Translation_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[11].Descriptor()
}

func (Translation_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[11]
}

func (x Translation_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Translation_Status.Descriptor instead.
func (Translation_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{31, 0}
}

type Character_Status int32

const (
	Character_default_state Character_Status = 0
	Character_deactive      Character_Status = 1
	Character_active        Character_Status = 2
)

// Enum value maps for Character_Status.
var (
	Character_Status_name = map[int32]string{
		0: "default_state",
		1: "deactive",
		2: "active",
	}
	Character_Status_value = map[string]int32{
		"default_state": 0,
		"deactive":      1,
		"active":        2,
	}
)

func (x Character_Status) Enum() *Character_Status {
	p := new(Character_Status)
	*p = x
	return p
}

func (x Character_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Character_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_library_proto_enumTypes[12].Descriptor()
}

func (Character_Status) Type() protoreflect.EnumType {
	return &file_library_proto_enumTypes[12]
}

func (x Character_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Character_Status.Descriptor instead.
func (Character_Status) EnumDescriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{34, 0}
}

type Listen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	MemberId    int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	SentenceId  int64 `protobuf:"varint,3,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	ParagraphId int64 `protobuf:"varint,4,opt,name=paragraph_id,json=paragraphId,proto3" json:"paragraph_id,omitempty"`
	DocumentId  int64 `protobuf:"varint,5,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	CreatedTime int64 `protobuf:"varint,6,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
}

func (x *Listen) Reset() {
	*x = Listen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listen) ProtoMessage() {}

func (x *Listen) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listen.ProtoReflect.Descriptor instead.
func (*Listen) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{0}
}

func (x *Listen) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Listen) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Listen) GetSentenceId() int64 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *Listen) GetParagraphId() int64 {
	if x != nil {
		return x.ParagraphId
	}
	return 0
}

func (x *Listen) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *Listen) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type CourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId int64    `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Title     string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Image     string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Type      int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Subject   int32    `protobuf:"varint,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Status    int32    `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	CourseIds []int64  `protobuf:"varint,9,rep,packed,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	Preload   []string `protobuf:"bytes,10,rep,name=preload,proto3" json:"preload,omitempty"`
	Limit     int32    `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32    `protobuf:"varint,12,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols      []string `protobuf:"bytes,13,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes  []string `protobuf:"bytes,14,rep,name=includes,proto3" json:"includes,omitempty"`
}

func (x *CourseRequest) Reset() {
	*x = CourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseRequest) ProtoMessage() {}

func (x *CourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseRequest.ProtoReflect.Descriptor instead.
func (*CourseRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{1}
}

func (x *CourseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *CourseRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CourseRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CourseRequest) GetSubject() int32 {
	if x != nil {
		return x.Subject
	}
	return 0
}

func (x *CourseRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CourseRequest) GetCourseIds() []int64 {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *CourseRequest) GetPreload() []string {
	if x != nil {
		return x.Preload
	}
	return nil
}

func (x *CourseRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CourseRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CourseRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *CourseRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	AccountId int64         `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Title     string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Image     string        `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Type      int32         `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Subject   int32         `protobuf:"varint,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Status    Course_Status `protobuf:"varint,7,opt,name=status,proto3,enum=library.Course_Status" json:"status,omitempty"`
	// `gorm:"-"`
	Documents []*Document `protobuf:"bytes,8,rep,name=documents,proto3" json:"documents,omitempty" gorm:"-"`
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{2}
}

func (x *Course) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Course) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Course) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Course) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Course) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Course) GetSubject() int32 {
	if x != nil {
		return x.Subject
	}
	return 0
}

func (x *Course) GetStatus() Course_Status {
	if x != nil {
		return x.Status
	}
	return Course_default_state
}

func (x *Course) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Courses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Courses) Reset() {
	*x = Courses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Courses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Courses) ProtoMessage() {}

func (x *Courses) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Courses.ProtoReflect.Descriptor instead.
func (*Courses) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{3}
}

func (x *Courses) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *Courses) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseId  int64    `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Title     string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Image     string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Content   string   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Status    int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Preload   []string `protobuf:"bytes,7,rep,name=preload,proto3" json:"preload,omitempty"`
	CourseIds []int64  `protobuf:"varint,8,rep,packed,name=course_ids,json=courseIds,proto3" json:"course_ids,omitempty"`
	Limit     int32    `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32    `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols      []string `protobuf:"bytes,11,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes  []string `protobuf:"bytes,12,rep,name=includes,proto3" json:"includes,omitempty"`
	CurrentId int64    `protobuf:"varint,14,opt,name=current_id,json=currentId,proto3" json:"current_id,omitempty"`
}

func (x *DocumentRequest) Reset() {
	*x = DocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentRequest) ProtoMessage() {}

func (x *DocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentRequest.ProtoReflect.Descriptor instead.
func (*DocumentRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DocumentRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *DocumentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DocumentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DocumentRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DocumentRequest) GetPreload() []string {
	if x != nil {
		return x.Preload
	}
	return nil
}

func (x *DocumentRequest) GetCourseIds() []int64 {
	if x != nil {
		return x.CourseIds
	}
	return nil
}

func (x *DocumentRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DocumentRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DocumentRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *DocumentRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *DocumentRequest) GetCurrentId() int64 {
	if x != nil {
		return x.CurrentId
	}
	return 0
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id       int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	CourseId int64           `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Title    string          `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Image    string          `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Content  string          `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Status   Document_Status `protobuf:"varint,6,opt,name=status,proto3,enum=library.Document_Status" json:"status,omitempty"`
	// `gorm:"-"`
	Paragraphs []*Paragraph `protobuf:"bytes,8,rep,name=paragraphs,proto3" json:"paragraphs,omitempty" gorm:"-"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{5}
}

func (x *Document) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Document) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *Document) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Document) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Document) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Document) GetStatus() Document_Status {
	if x != nil {
		return x.Status
	}
	return Document_default_state
}

func (x *Document) GetParagraphs() []*Paragraph {
	if x != nil {
		return x.Paragraphs
	}
	return nil
}

type Documents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents          []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	Total              int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	DocmentCurrentId   int64       `protobuf:"varint,3,opt,name=docment_current_id,json=docmentCurrentId,proto3" json:"docment_current_id,omitempty"`
	ParagraphCurrentId int64       `protobuf:"varint,4,opt,name=paragraph_current_id,json=paragraphCurrentId,proto3" json:"paragraph_current_id,omitempty"`
	SentenceCurrentId  int64       `protobuf:"varint,5,opt,name=sentence_current_id,json=sentenceCurrentId,proto3" json:"sentence_current_id,omitempty"`
}

func (x *Documents) Reset() {
	*x = Documents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Documents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Documents) ProtoMessage() {}

func (x *Documents) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Documents.ProtoReflect.Descriptor instead.
func (*Documents) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{6}
}

func (x *Documents) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *Documents) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Documents) GetDocmentCurrentId() int64 {
	if x != nil {
		return x.DocmentCurrentId
	}
	return 0
}

func (x *Documents) GetParagraphCurrentId() int64 {
	if x != nil {
		return x.ParagraphCurrentId
	}
	return 0
}

func (x *Documents) GetSentenceCurrentId() int64 {
	if x != nil {
		return x.SentenceCurrentId
	}
	return 0
}

type ParagraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocumentId  int64    `protobuf:"varint,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Type        int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Position    int32    `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	Status      int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Limit       int32    `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset      int32    `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols        []string `protobuf:"bytes,11,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes    []string `protobuf:"bytes,12,rep,name=includes,proto3" json:"includes,omitempty"`
	DocumentIds []int64  `protobuf:"varint,13,rep,packed,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
	CurrentId   int64    `protobuf:"varint,14,opt,name=current_id,json=currentId,proto3" json:"current_id,omitempty"`
}

func (x *ParagraphRequest) Reset() {
	*x = ParagraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParagraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParagraphRequest) ProtoMessage() {}

func (x *ParagraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParagraphRequest.ProtoReflect.Descriptor instead.
func (*ParagraphRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{7}
}

func (x *ParagraphRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParagraphRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ParagraphRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ParagraphRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ParagraphRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ParagraphRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ParagraphRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ParagraphRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *ParagraphRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *ParagraphRequest) GetDocumentIds() []int64 {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *ParagraphRequest) GetCurrentId() int64 {
	if x != nil {
		return x.CurrentId
	}
	return 0
}

type Paragraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id           int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	ApproveId    int64          `protobuf:"varint,2,opt,name=approve_id,json=approveId,proto3" json:"approve_id,omitempty"`
	AccountId    int64          `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	GenerationId int64          `protobuf:"varint,4,opt,name=generation_id,json=generationId,proto3" json:"generation_id,omitempty"`
	MemberId     int64          `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	CourseId     int64          `protobuf:"varint,6,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	DocumentId   int64          `protobuf:"varint,7,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Title        string         `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	Image        string         `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`
	Type         Paragraph_Type `protobuf:"varint,10,opt,name=type,proto3,enum=library.Paragraph_Type" json:"type,omitempty"` //1. Đoạn văn thường, 2. Hội thoại, 3. Quiz, 4. Ảnh
	Position     int32          `protobuf:"varint,11,opt,name=position,proto3" json:"position,omitempty"`
	// `gorm:"text"`
	Keywords        string                 `protobuf:"bytes,12,opt,name=keywords,proto3" json:"keywords,omitempty" gorm:"text"`
	Indexed         int32                  `protobuf:"varint,13,opt,name=indexed,proto3" json:"indexed,omitempty"`
	Approved        Paragraph_Approved     `protobuf:"varint,14,opt,name=approved,proto3,enum=library.Paragraph_Approved" json:"approved,omitempty"` // Duyệt nội dung / 1: Chưa, 2: Đã duyệt
	Status          Paragraph_Status       `protobuf:"varint,15,opt,name=status,proto3,enum=library.Paragraph_Status" json:"status,omitempty"`
	ProcessAudio    Paragraph_ProcessAudio `protobuf:"varint,16,opt,name=process_audio,json=processAudio,proto3,enum=library.Paragraph_ProcessAudio" json:"process_audio,omitempty"` // Process audio / 1: Chưa xử lý, 2: Đã gửi job tạo audio, 3: Đã tạo xong audio
	ProcessTranslat int32                  `protobuf:"varint,17,opt,name=process_translat,json=processTranslat,proto3" json:"process_translat,omitempty"`
	CreatedAt       int64                  `protobuf:"varint,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// int64 updated_at = 19;
	// `gorm:"-"`
	Sentences []*Sentence `protobuf:"bytes,21,rep,name=sentences,proto3" json:"sentences,omitempty" gorm:"-"`
}

func (x *Paragraph) Reset() {
	*x = Paragraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paragraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paragraph) ProtoMessage() {}

func (x *Paragraph) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paragraph.ProtoReflect.Descriptor instead.
func (*Paragraph) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{8}
}

func (x *Paragraph) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Paragraph) GetApproveId() int64 {
	if x != nil {
		return x.ApproveId
	}
	return 0
}

func (x *Paragraph) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Paragraph) GetGenerationId() int64 {
	if x != nil {
		return x.GenerationId
	}
	return 0
}

func (x *Paragraph) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Paragraph) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *Paragraph) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *Paragraph) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Paragraph) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Paragraph) GetType() Paragraph_Type {
	if x != nil {
		return x.Type
	}
	return Paragraph_default_type
}

func (x *Paragraph) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Paragraph) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *Paragraph) GetIndexed() int32 {
	if x != nil {
		return x.Indexed
	}
	return 0
}

func (x *Paragraph) GetApproved() Paragraph_Approved {
	if x != nil {
		return x.Approved
	}
	return Paragraph_default_approved
}

func (x *Paragraph) GetStatus() Paragraph_Status {
	if x != nil {
		return x.Status
	}
	return Paragraph_default_state
}

func (x *Paragraph) GetProcessAudio() Paragraph_ProcessAudio {
	if x != nil {
		return x.ProcessAudio
	}
	return Paragraph_default_process_audio
}

func (x *Paragraph) GetProcessTranslat() int32 {
	if x != nil {
		return x.ProcessTranslat
	}
	return 0
}

func (x *Paragraph) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Paragraph) GetSentences() []*Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

type Paragraphs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paragraphs []*Paragraph `protobuf:"bytes,1,rep,name=paragraphs,proto3" json:"paragraphs,omitempty"`
	CurrentId  int64        `protobuf:"varint,3,opt,name=current_id,json=currentId,proto3" json:"current_id,omitempty"`
	Total      int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Paragraphs) Reset() {
	*x = Paragraphs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paragraphs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paragraphs) ProtoMessage() {}

func (x *Paragraphs) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paragraphs.ProtoReflect.Descriptor instead.
func (*Paragraphs) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{9}
}

func (x *Paragraphs) GetParagraphs() []*Paragraph {
	if x != nil {
		return x.Paragraphs
	}
	return nil
}

func (x *Paragraphs) GetCurrentId() int64 {
	if x != nil {
		return x.CurrentId
	}
	return 0
}

func (x *Paragraphs) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SentenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseId        int64    `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	DocumentId      int64    `protobuf:"varint,3,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ParagraphId     int64    `protobuf:"varint,4,opt,name=paragraph_id,json=paragraphId,proto3" json:"paragraph_id,omitempty"`
	CharacterId     int64    `protobuf:"varint,5,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	VoiceId         int64    `protobuf:"varint,6,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	Content         string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	TranslateGoogle string   `protobuf:"bytes,8,opt,name=translate_google,json=translateGoogle,proto3" json:"translate_google,omitempty"`
	TranslateEditor string   `protobuf:"bytes,9,opt,name=translate_editor,json=translateEditor,proto3" json:"translate_editor,omitempty"`
	Keywords        string   `protobuf:"bytes,10,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Words           string   `protobuf:"bytes,11,opt,name=words,proto3" json:"words,omitempty"`
	ProcessVoice    int32    `protobuf:"varint,12,opt,name=process_voice,json=processVoice,proto3" json:"process_voice,omitempty"`
	Status          int32    `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	Limit           int32    `protobuf:"varint,14,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32    `protobuf:"varint,15,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols            []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes        []string `protobuf:"bytes,17,rep,name=includes,proto3" json:"includes,omitempty"`
	Ids             []int64  `protobuf:"varint,18,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	CharacterIds    []int64  `protobuf:"varint,19,rep,packed,name=character_ids,json=characterIds,proto3" json:"character_ids,omitempty"`
	CurrentId       int64    `protobuf:"varint,20,opt,name=current_id,json=currentId,proto3" json:"current_id,omitempty"`
}

func (x *SentenceRequest) Reset() {
	*x = SentenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentenceRequest) ProtoMessage() {}

func (x *SentenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentenceRequest.ProtoReflect.Descriptor instead.
func (*SentenceRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{10}
}

func (x *SentenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SentenceRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *SentenceRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *SentenceRequest) GetParagraphId() int64 {
	if x != nil {
		return x.ParagraphId
	}
	return 0
}

func (x *SentenceRequest) GetCharacterId() int64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *SentenceRequest) GetVoiceId() int64 {
	if x != nil {
		return x.VoiceId
	}
	return 0
}

func (x *SentenceRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SentenceRequest) GetTranslateGoogle() string {
	if x != nil {
		return x.TranslateGoogle
	}
	return ""
}

func (x *SentenceRequest) GetTranslateEditor() string {
	if x != nil {
		return x.TranslateEditor
	}
	return ""
}

func (x *SentenceRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SentenceRequest) GetWords() string {
	if x != nil {
		return x.Words
	}
	return ""
}

func (x *SentenceRequest) GetProcessVoice() int32 {
	if x != nil {
		return x.ProcessVoice
	}
	return 0
}

func (x *SentenceRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SentenceRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SentenceRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SentenceRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *SentenceRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *SentenceRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SentenceRequest) GetCharacterIds() []int64 {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *SentenceRequest) GetCurrentId() int64 {
	if x != nil {
		return x.CurrentId
	}
	return 0
}

type Sentence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id             int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	CourseId       int64           `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	DocumentId     int64           `protobuf:"varint,3,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ParagraphId    int64           `protobuf:"varint,4,opt,name=paragraph_id,json=paragraphId,proto3" json:"paragraph_id,omitempty"`
	CharacterId    int64           `protobuf:"varint,5,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Content        string          `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Keywords       string          `protobuf:"bytes,10,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Words          string          `protobuf:"bytes,11,opt,name=words,proto3" json:"words,omitempty"`
	ProcessAudio   int32           `protobuf:"varint,12,opt,name=process_audio,json=processAudio,proto3" json:"process_audio,omitempty"`
	ProcessContent int32           `protobuf:"varint,9,opt,name=process_content,json=processContent,proto3" json:"process_content,omitempty"`
	Status         Sentence_Status `protobuf:"varint,13,opt,name=status,proto3,enum=library.Sentence_Status" json:"status,omitempty"`
	// `gorm:"-"`
	Audios []*Audio `protobuf:"bytes,15,rep,name=audios,proto3" json:"audios,omitempty" gorm:"-"`
	// `gorm:"-"`
	Translation *Translation `protobuf:"bytes,16,opt,name=translation,proto3" json:"translation,omitempty" gorm:"-"`
	// `gorm:"-"`
	Speak *transaction.Speak `protobuf:"bytes,17,opt,name=speak,proto3" json:"speak,omitempty" gorm:"-"`
	Point float32            `protobuf:"fixed32,18,opt,name=point,proto3" json:"point,omitempty"`
	Color string             `protobuf:"bytes,19,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Sentence) Reset() {
	*x = Sentence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentence) ProtoMessage() {}

func (x *Sentence) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentence.ProtoReflect.Descriptor instead.
func (*Sentence) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{11}
}

func (x *Sentence) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sentence) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *Sentence) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *Sentence) GetParagraphId() int64 {
	if x != nil {
		return x.ParagraphId
	}
	return 0
}

func (x *Sentence) GetCharacterId() int64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *Sentence) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Sentence) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *Sentence) GetWords() string {
	if x != nil {
		return x.Words
	}
	return ""
}

func (x *Sentence) GetProcessAudio() int32 {
	if x != nil {
		return x.ProcessAudio
	}
	return 0
}

func (x *Sentence) GetProcessContent() int32 {
	if x != nil {
		return x.ProcessContent
	}
	return 0
}

func (x *Sentence) GetStatus() Sentence_Status {
	if x != nil {
		return x.Status
	}
	return Sentence_default_state
}

func (x *Sentence) GetAudios() []*Audio {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *Sentence) GetTranslation() *Translation {
	if x != nil {
		return x.Translation
	}
	return nil
}

func (x *Sentence) GetSpeak() *transaction.Speak {
	if x != nil {
		return x.Speak
	}
	return nil
}

func (x *Sentence) GetPoint() float32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *Sentence) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type Sentences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sentences          []*Sentence  `protobuf:"bytes,1,rep,name=sentences,proto3" json:"sentences,omitempty"`
	Total              int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Characters         []*Character `protobuf:"bytes,6,rep,name=characters,proto3" json:"characters,omitempty"`
	DocmentCurrentId   int64        `protobuf:"varint,3,opt,name=docment_current_id,json=docmentCurrentId,proto3" json:"docment_current_id,omitempty"`
	ParagraphCurrentId int64        `protobuf:"varint,4,opt,name=paragraph_current_id,json=paragraphCurrentId,proto3" json:"paragraph_current_id,omitempty"`
	SentenceCurrentId  int64        `protobuf:"varint,5,opt,name=sentence_current_id,json=sentenceCurrentId,proto3" json:"sentence_current_id,omitempty"`
}

func (x *Sentences) Reset() {
	*x = Sentences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentences) ProtoMessage() {}

func (x *Sentences) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentences.ProtoReflect.Descriptor instead.
func (*Sentences) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{12}
}

func (x *Sentences) GetSentences() []*Sentence {
	if x != nil {
		return x.Sentences
	}
	return nil
}

func (x *Sentences) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Sentences) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *Sentences) GetDocmentCurrentId() int64 {
	if x != nil {
		return x.DocmentCurrentId
	}
	return 0
}

func (x *Sentences) GetParagraphCurrentId() int64 {
	if x != nil {
		return x.ParagraphCurrentId
	}
	return 0
}

func (x *Sentences) GetSentenceCurrentId() int64 {
	if x != nil {
		return x.SentenceCurrentId
	}
	return 0
}

type AudioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SentenceId      int64    `protobuf:"varint,2,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	VoiceId         int64    `protobuf:"varint,3,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	TranscriptionId string   `protobuf:"bytes,4,opt,name=transcription_id,json=transcriptionId,proto3" json:"transcription_id,omitempty"`
	AccentId        int64    `protobuf:"varint,5,opt,name=accent_id,json=accentId,proto3" json:"accent_id,omitempty"`
	Title           string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Language        string   `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Gender          int32    `protobuf:"varint,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Duration        float32  `protobuf:"fixed32,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Url             string   `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Length          int64    `protobuf:"varint,11,opt,name=length,proto3" json:"length,omitempty"`
	Count           int64    `protobuf:"varint,12,opt,name=count,proto3" json:"count,omitempty"`
	Process         int32    `protobuf:"varint,13,opt,name=process,proto3" json:"process,omitempty"`
	Created         int64    `protobuf:"varint,14,opt,name=created,proto3" json:"created,omitempty"`
	Status          int32    `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	Limit           int32    `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32    `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols            []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes        []string `protobuf:"bytes,19,rep,name=includes,proto3" json:"includes,omitempty"`
	SentenceIds     []int64  `protobuf:"varint,20,rep,packed,name=sentence_ids,json=sentenceIds,proto3" json:"sentence_ids,omitempty"`
}

func (x *AudioRequest) Reset() {
	*x = AudioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRequest) ProtoMessage() {}

func (x *AudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRequest.ProtoReflect.Descriptor instead.
func (*AudioRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{13}
}

func (x *AudioRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AudioRequest) GetSentenceId() int64 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *AudioRequest) GetVoiceId() int64 {
	if x != nil {
		return x.VoiceId
	}
	return 0
}

func (x *AudioRequest) GetTranscriptionId() string {
	if x != nil {
		return x.TranscriptionId
	}
	return ""
}

func (x *AudioRequest) GetAccentId() int64 {
	if x != nil {
		return x.AccentId
	}
	return 0
}

func (x *AudioRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AudioRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AudioRequest) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *AudioRequest) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AudioRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AudioRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *AudioRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AudioRequest) GetProcess() int32 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *AudioRequest) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *AudioRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AudioRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AudioRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AudioRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *AudioRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *AudioRequest) GetSentenceIds() []int64 {
	if x != nil {
		return x.SentenceIds
	}
	return nil
}

type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id              int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	SentenceId      int64        `protobuf:"varint,2,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	VoiceId         int64        `protobuf:"varint,3,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	TranscriptionId string       `protobuf:"bytes,4,opt,name=transcription_id,json=transcriptionId,proto3" json:"transcription_id,omitempty"`
	Speed           int32        `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Duration        float32      `protobuf:"fixed32,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Url             string       `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Size            int64        `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	Process         int32        `protobuf:"varint,13,opt,name=process,proto3" json:"process,omitempty"`
	CreatedAt       int64        `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status          Audio_Status `protobuf:"varint,15,opt,name=status,proto3,enum=library.Audio_Status" json:"status,omitempty"`
	Keyx            string       `protobuf:"bytes,16,opt,name=keyx,proto3" json:"keyx,omitempty"`
	Format          string       `protobuf:"bytes,17,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{14}
}

func (x *Audio) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Audio) GetSentenceId() int64 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *Audio) GetVoiceId() int64 {
	if x != nil {
		return x.VoiceId
	}
	return 0
}

func (x *Audio) GetTranscriptionId() string {
	if x != nil {
		return x.TranscriptionId
	}
	return ""
}

func (x *Audio) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Audio) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Audio) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Audio) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Audio) GetProcess() int32 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *Audio) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Audio) GetStatus() Audio_Status {
	if x != nil {
		return x.Status
	}
	return Audio_default_state
}

func (x *Audio) GetKeyx() string {
	if x != nil {
		return x.Keyx
	}
	return ""
}

func (x *Audio) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type Audios struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audios []*Audio `protobuf:"bytes,1,rep,name=audios,proto3" json:"audios,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Audios) Reset() {
	*x = Audios{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audios) ProtoMessage() {}

func (x *Audios) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audios.ProtoReflect.Descriptor instead.
func (*Audios) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{15}
}

func (x *Audios) GetAudios() []*Audio {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *Audios) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CourseTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseId int64 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	TagId    int64 `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Status   int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CourseTagRequest) Reset() {
	*x = CourseTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTagRequest) ProtoMessage() {}

func (x *CourseTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTagRequest.ProtoReflect.Descriptor instead.
func (*CourseTagRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{16}
}

func (x *CourseTagRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseTagRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseTagRequest) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *CourseTagRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CourseTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	CourseId int64 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	TagId    int64 `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Status   int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CourseTag) Reset() {
	*x = CourseTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTag) ProtoMessage() {}

func (x *CourseTag) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTag.ProtoReflect.Descriptor instead.
func (*CourseTag) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{17}
}

func (x *CourseTag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseTag) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseTag) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *CourseTag) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CourseTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseTags []*CourseTag `protobuf:"bytes,1,rep,name=courseTags,proto3" json:"courseTags,omitempty"`
	Total      int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CourseTags) Reset() {
	*x = CourseTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseTags) ProtoMessage() {}

func (x *CourseTags) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseTags.ProtoReflect.Descriptor instead.
func (*CourseTags) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{18}
}

func (x *CourseTags) GetCourseTags() []*CourseTag {
	if x != nil {
		return x.CourseTags
	}
	return nil
}

func (x *CourseTags) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchEngine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id       int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	Item     string              `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	ObjectId int64               `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Title    string              `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content  string              `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Status   SearchEngine_Status `protobuf:"varint,6,opt,name=status,proto3,enum=library.SearchEngine_Status" json:"status,omitempty"`
	Created  int64               `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty"`
	// `gorm:"-"`
	Courses []*Course `protobuf:"bytes,8,rep,name=courses,proto3" json:"courses,omitempty" gorm:"-"`
	// `gorm:"-"`
	Documents []*Document `protobuf:"bytes,9,rep,name=documents,proto3" json:"documents,omitempty" gorm:"-"`
	// `gorm:"-"`
	Paragraphs []*Paragraph `protobuf:"bytes,10,rep,name=paragraphs,proto3" json:"paragraphs,omitempty" gorm:"-"`
}

func (x *SearchEngine) Reset() {
	*x = SearchEngine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEngine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEngine) ProtoMessage() {}

func (x *SearchEngine) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEngine.ProtoReflect.Descriptor instead.
func (*SearchEngine) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{19}
}

func (x *SearchEngine) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchEngine) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *SearchEngine) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *SearchEngine) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchEngine) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchEngine) GetStatus() SearchEngine_Status {
	if x != nil {
		return x.Status
	}
	return SearchEngine_default_state
}

func (x *SearchEngine) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *SearchEngine) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *SearchEngine) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *SearchEngine) GetParagraphs() []*Paragraph {
	if x != nil {
		return x.Paragraphs
	}
	return nil
}

type SearchEngineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Item     string   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	ObjectId int64    `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Title    string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content  string   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Status   int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Limit    int32    `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32    `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols     []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes []string `protobuf:"bytes,19,rep,name=includes,proto3" json:"includes,omitempty"`
}

func (x *SearchEngineRequest) Reset() {
	*x = SearchEngineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEngineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEngineRequest) ProtoMessage() {}

func (x *SearchEngineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEngineRequest.ProtoReflect.Descriptor instead.
func (*SearchEngineRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{20}
}

func (x *SearchEngineRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchEngineRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *SearchEngineRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *SearchEngineRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchEngineRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchEngineRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchEngineRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchEngineRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchEngineRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *SearchEngineRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

type SearchEngines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	SearchEngines []*SearchEngine `protobuf:"bytes,2,rep,name=search_engines,json=searchEngines,proto3" json:"search_engines,omitempty"`
}

func (x *SearchEngines) Reset() {
	*x = SearchEngines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEngines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEngines) ProtoMessage() {}

func (x *SearchEngines) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEngines.ProtoReflect.Descriptor instead.
func (*SearchEngines) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{21}
}

func (x *SearchEngines) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchEngines) GetSearchEngines() []*SearchEngine {
	if x != nil {
		return x.SearchEngines
	}
	return nil
}

type SentencePos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id         int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	SentenceId int64              `protobuf:"varint,2,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	Word       string             `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	Lemma      string             `protobuf:"bytes,4,opt,name=lemma,proto3" json:"lemma,omitempty"`
	Pos        string             `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`
	PosGroup   string             `protobuf:"bytes,6,opt,name=pos_group,json=posGroup,proto3" json:"pos_group,omitempty"`
	Position   int32              `protobuf:"varint,7,opt,name=position,proto3" json:"position,omitempty"`
	Status     SentencePos_Status `protobuf:"varint,8,opt,name=status,proto3,enum=library.SentencePos_Status" json:"status,omitempty"`
}

func (x *SentencePos) Reset() {
	*x = SentencePos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentencePos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentencePos) ProtoMessage() {}

func (x *SentencePos) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentencePos.ProtoReflect.Descriptor instead.
func (*SentencePos) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{22}
}

func (x *SentencePos) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SentencePos) GetSentenceId() int64 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *SentencePos) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SentencePos) GetLemma() string {
	if x != nil {
		return x.Lemma
	}
	return ""
}

func (x *SentencePos) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *SentencePos) GetPosGroup() string {
	if x != nil {
		return x.PosGroup
	}
	return ""
}

func (x *SentencePos) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *SentencePos) GetStatus() SentencePos_Status {
	if x != nil {
		return x.Status
	}
	return SentencePos_default_state
}

type SentencePosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SentenceId int64    `protobuf:"varint,2,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	Word       string   `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	Lemma      string   `protobuf:"bytes,4,opt,name=lemma,proto3" json:"lemma,omitempty"`
	Pos        string   `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`
	PosGroup   string   `protobuf:"bytes,6,opt,name=pos_group,json=posGroup,proto3" json:"pos_group,omitempty"`
	Position   int32    `protobuf:"varint,7,opt,name=position,proto3" json:"position,omitempty"`
	Status     int32    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Limit      int32    `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int32    `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols       []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes   []string `protobuf:"bytes,19,rep,name=includes,proto3" json:"includes,omitempty"`
}

func (x *SentencePosRequest) Reset() {
	*x = SentencePosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentencePosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentencePosRequest) ProtoMessage() {}

func (x *SentencePosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentencePosRequest.ProtoReflect.Descriptor instead.
func (*SentencePosRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{23}
}

func (x *SentencePosRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SentencePosRequest) GetSentenceId() int64 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *SentencePosRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *SentencePosRequest) GetLemma() string {
	if x != nil {
		return x.Lemma
	}
	return ""
}

func (x *SentencePosRequest) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *SentencePosRequest) GetPosGroup() string {
	if x != nil {
		return x.PosGroup
	}
	return ""
}

func (x *SentencePosRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *SentencePosRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SentencePosRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SentencePosRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SentencePosRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *SentencePosRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

type SentencePoses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	SentencePoses []*SentencePos `protobuf:"bytes,2,rep,name=sentence_poses,json=sentencePoses,proto3" json:"sentence_poses,omitempty"`
}

func (x *SentencePoses) Reset() {
	*x = SentencePoses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentencePoses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentencePoses) ProtoMessage() {}

func (x *SentencePoses) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentencePoses.ProtoReflect.Descriptor instead.
func (*SentencePoses) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{24}
}

func (x *SentencePoses) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SentencePoses) GetSentencePoses() []*SentencePos {
	if x != nil {
		return x.SentencePoses
	}
	return nil
}

type Mean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id              int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	WordId          int64       `protobuf:"varint,2,opt,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
	Pos             string      `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	PosGroup        string      `protobuf:"bytes,4,opt,name=pos_group,json=posGroup,proto3" json:"pos_group,omitempty"`
	PosManual       string      `protobuf:"bytes,5,opt,name=pos_manual,json=posManual,proto3" json:"pos_manual,omitempty"`
	PosTi           string      `protobuf:"bytes,6,opt,name=pos_ti,json=posTi,proto3" json:"pos_ti,omitempty"`
	PosFull         string      `protobuf:"bytes,7,opt,name=pos_full,json=posFull,proto3" json:"pos_full,omitempty"`
	Lemma           string      `protobuf:"bytes,8,opt,name=lemma,proto3" json:"lemma,omitempty"`
	Word            string      `protobuf:"bytes,9,opt,name=word,proto3" json:"word,omitempty"`
	Level           string      `protobuf:"bytes,10,opt,name=level,proto3" json:"level,omitempty"`
	Gram            string      `protobuf:"bytes,11,opt,name=gram,proto3" json:"gram,omitempty"`
	Usage           string      `protobuf:"bytes,12,opt,name=usage,proto3" json:"usage,omitempty"`
	Guideword       string      `protobuf:"bytes,13,opt,name=guideword,proto3" json:"guideword,omitempty"`
	Phonetic        string      `protobuf:"bytes,14,opt,name=phonetic,proto3" json:"phonetic,omitempty"`
	Translate       string      `protobuf:"bytes,15,opt,name=translate,proto3" json:"translate,omitempty"`
	Definition      string      `protobuf:"bytes,16,opt,name=definition,proto3" json:"definition,omitempty"`
	DefinitionVi    string      `protobuf:"bytes,17,opt,name=definition_vi,json=definitionVi,proto3" json:"definition_vi,omitempty"`
	Review          int32       `protobuf:"varint,18,opt,name=review,proto3" json:"review,omitempty"`
	ProcessTranslat int32       `protobuf:"varint,19,opt,name=process_translat,json=processTranslat,proto3" json:"process_translat,omitempty"`
	ProcessPos      int32       `protobuf:"varint,20,opt,name=process_pos,json=processPos,proto3" json:"process_pos,omitempty"`
	Status          Mean_Status `protobuf:"varint,21,opt,name=status,proto3,enum=library.Mean_Status" json:"status,omitempty"`
}

func (x *Mean) Reset() {
	*x = Mean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mean) ProtoMessage() {}

func (x *Mean) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mean.ProtoReflect.Descriptor instead.
func (*Mean) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{25}
}

func (x *Mean) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Mean) GetWordId() int64 {
	if x != nil {
		return x.WordId
	}
	return 0
}

func (x *Mean) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *Mean) GetPosGroup() string {
	if x != nil {
		return x.PosGroup
	}
	return ""
}

func (x *Mean) GetPosManual() string {
	if x != nil {
		return x.PosManual
	}
	return ""
}

func (x *Mean) GetPosTi() string {
	if x != nil {
		return x.PosTi
	}
	return ""
}

func (x *Mean) GetPosFull() string {
	if x != nil {
		return x.PosFull
	}
	return ""
}

func (x *Mean) GetLemma() string {
	if x != nil {
		return x.Lemma
	}
	return ""
}

func (x *Mean) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Mean) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Mean) GetGram() string {
	if x != nil {
		return x.Gram
	}
	return ""
}

func (x *Mean) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *Mean) GetGuideword() string {
	if x != nil {
		return x.Guideword
	}
	return ""
}

func (x *Mean) GetPhonetic() string {
	if x != nil {
		return x.Phonetic
	}
	return ""
}

func (x *Mean) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

func (x *Mean) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *Mean) GetDefinitionVi() string {
	if x != nil {
		return x.DefinitionVi
	}
	return ""
}

func (x *Mean) GetReview() int32 {
	if x != nil {
		return x.Review
	}
	return 0
}

func (x *Mean) GetProcessTranslat() int32 {
	if x != nil {
		return x.ProcessTranslat
	}
	return 0
}

func (x *Mean) GetProcessPos() int32 {
	if x != nil {
		return x.ProcessPos
	}
	return 0
}

func (x *Mean) GetStatus() Mean_Status {
	if x != nil {
		return x.Status
	}
	return Mean_default_state
}

type MeanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WordId          int64    `protobuf:"varint,2,opt,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
	Pos             string   `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	PosGroup        string   `protobuf:"bytes,4,opt,name=pos_group,json=posGroup,proto3" json:"pos_group,omitempty"`
	PosManual       string   `protobuf:"bytes,5,opt,name=pos_manual,json=posManual,proto3" json:"pos_manual,omitempty"`
	PosTi           string   `protobuf:"bytes,6,opt,name=pos_ti,json=posTi,proto3" json:"pos_ti,omitempty"`
	PosFull         string   `protobuf:"bytes,7,opt,name=pos_full,json=posFull,proto3" json:"pos_full,omitempty"`
	Lemma           string   `protobuf:"bytes,8,opt,name=lemma,proto3" json:"lemma,omitempty"`
	Word            string   `protobuf:"bytes,9,opt,name=word,proto3" json:"word,omitempty"`
	Level           string   `protobuf:"bytes,10,opt,name=level,proto3" json:"level,omitempty"`
	Gram            string   `protobuf:"bytes,11,opt,name=gram,proto3" json:"gram,omitempty"`
	Usage           string   `protobuf:"bytes,12,opt,name=usage,proto3" json:"usage,omitempty"`
	Guideword       string   `protobuf:"bytes,13,opt,name=guideword,proto3" json:"guideword,omitempty"`
	Phonetic        string   `protobuf:"bytes,14,opt,name=phonetic,proto3" json:"phonetic,omitempty"`
	Translate       string   `protobuf:"bytes,15,opt,name=translate,proto3" json:"translate,omitempty"`
	Definition      string   `protobuf:"bytes,16,opt,name=definition,proto3" json:"definition,omitempty"`
	DefinitionVi    string   `protobuf:"bytes,17,opt,name=definition_vi,json=definitionVi,proto3" json:"definition_vi,omitempty"`
	Review          int32    `protobuf:"varint,18,opt,name=review,proto3" json:"review,omitempty"`
	ProcessTranslat int32    `protobuf:"varint,19,opt,name=process_translat,json=processTranslat,proto3" json:"process_translat,omitempty"`
	ProcessPos      int32    `protobuf:"varint,20,opt,name=process_pos,json=processPos,proto3" json:"process_pos,omitempty"`
	Status          int32    `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`
	Limit           int32    `protobuf:"varint,22,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32    `protobuf:"varint,23,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols            []string `protobuf:"bytes,24,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes        []string `protobuf:"bytes,25,rep,name=includes,proto3" json:"includes,omitempty"`
}

func (x *MeanRequest) Reset() {
	*x = MeanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeanRequest) ProtoMessage() {}

func (x *MeanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeanRequest.ProtoReflect.Descriptor instead.
func (*MeanRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{26}
}

func (x *MeanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeanRequest) GetWordId() int64 {
	if x != nil {
		return x.WordId
	}
	return 0
}

func (x *MeanRequest) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *MeanRequest) GetPosGroup() string {
	if x != nil {
		return x.PosGroup
	}
	return ""
}

func (x *MeanRequest) GetPosManual() string {
	if x != nil {
		return x.PosManual
	}
	return ""
}

func (x *MeanRequest) GetPosTi() string {
	if x != nil {
		return x.PosTi
	}
	return ""
}

func (x *MeanRequest) GetPosFull() string {
	if x != nil {
		return x.PosFull
	}
	return ""
}

func (x *MeanRequest) GetLemma() string {
	if x != nil {
		return x.Lemma
	}
	return ""
}

func (x *MeanRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *MeanRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *MeanRequest) GetGram() string {
	if x != nil {
		return x.Gram
	}
	return ""
}

func (x *MeanRequest) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *MeanRequest) GetGuideword() string {
	if x != nil {
		return x.Guideword
	}
	return ""
}

func (x *MeanRequest) GetPhonetic() string {
	if x != nil {
		return x.Phonetic
	}
	return ""
}

func (x *MeanRequest) GetTranslate() string {
	if x != nil {
		return x.Translate
	}
	return ""
}

func (x *MeanRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *MeanRequest) GetDefinitionVi() string {
	if x != nil {
		return x.DefinitionVi
	}
	return ""
}

func (x *MeanRequest) GetReview() int32 {
	if x != nil {
		return x.Review
	}
	return 0
}

func (x *MeanRequest) GetProcessTranslat() int32 {
	if x != nil {
		return x.ProcessTranslat
	}
	return 0
}

func (x *MeanRequest) GetProcessPos() int32 {
	if x != nil {
		return x.ProcessPos
	}
	return 0
}

func (x *MeanRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MeanRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MeanRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeanRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *MeanRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

type Means struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Means []*Mean `protobuf:"bytes,2,rep,name=means,proto3" json:"means,omitempty"`
}

func (x *Means) Reset() {
	*x = Means{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Means) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Means) ProtoMessage() {}

func (x *Means) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Means.ProtoReflect.Descriptor instead.
func (*Means) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{27}
}

func (x *Means) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Means) GetMeans() []*Mean {
	if x != nil {
		return x.Means
	}
	return nil
}

type Pos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	TagBc   string `protobuf:"bytes,2,opt,name=tag_bc,json=tagBc,proto3" json:"tag_bc,omitempty"`
	TagUn   string `protobuf:"bytes,3,opt,name=tag_un,json=tagUn,proto3" json:"tag_un,omitempty"`
	TagTi   string `protobuf:"bytes,4,opt,name=tag_ti,json=tagTi,proto3" json:"tag_ti,omitempty"`
	TitleEn string `protobuf:"bytes,5,opt,name=title_en,json=titleEn,proto3" json:"title_en,omitempty"`
	Title   string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Process int64  `protobuf:"varint,7,opt,name=process,proto3" json:"process,omitempty"`
	// `gorm:"-"`
	Means []*Mean `protobuf:"bytes,8,rep,name=means,proto3" json:"means,omitempty" gorm:"-"`
}

func (x *Pos) Reset() {
	*x = Pos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos) ProtoMessage() {}

func (x *Pos) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos.ProtoReflect.Descriptor instead.
func (*Pos) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{28}
}

func (x *Pos) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pos) GetTagBc() string {
	if x != nil {
		return x.TagBc
	}
	return ""
}

func (x *Pos) GetTagUn() string {
	if x != nil {
		return x.TagUn
	}
	return ""
}

func (x *Pos) GetTagTi() string {
	if x != nil {
		return x.TagTi
	}
	return ""
}

func (x *Pos) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *Pos) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Pos) GetProcess() int64 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *Pos) GetMeans() []*Mean {
	if x != nil {
		return x.Means
	}
	return nil
}

type PosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TagBc      string   `protobuf:"bytes,2,opt,name=tag_bc,json=tagBc,proto3" json:"tag_bc,omitempty"`
	TagUn      string   `protobuf:"bytes,3,opt,name=tag_un,json=tagUn,proto3" json:"tag_un,omitempty"`
	TagTi      string   `protobuf:"bytes,4,opt,name=tag_ti,json=tagTi,proto3" json:"tag_ti,omitempty"`
	TitleEn    string   `protobuf:"bytes,5,opt,name=title_en,json=titleEn,proto3" json:"title_en,omitempty"`
	Title      string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Process    int64    `protobuf:"varint,7,opt,name=process,proto3" json:"process,omitempty"`
	Status     int32    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Limit      int32    `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int32    `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols       []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes   []string `protobuf:"bytes,19,rep,name=includes,proto3" json:"includes,omitempty"`
	SentenceId int64    `protobuf:"varint,20,opt,name=sentence_id,json=sentenceId,proto3" json:"sentence_id,omitempty"`
	Word       string   `protobuf:"bytes,21,opt,name=word,proto3" json:"word,omitempty"`
	Position   int32    `protobuf:"varint,22,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *PosRequest) Reset() {
	*x = PosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosRequest) ProtoMessage() {}

func (x *PosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosRequest.ProtoReflect.Descriptor instead.
func (*PosRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{29}
}

func (x *PosRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PosRequest) GetTagBc() string {
	if x != nil {
		return x.TagBc
	}
	return ""
}

func (x *PosRequest) GetTagUn() string {
	if x != nil {
		return x.TagUn
	}
	return ""
}

func (x *PosRequest) GetTagTi() string {
	if x != nil {
		return x.TagTi
	}
	return ""
}

func (x *PosRequest) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *PosRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PosRequest) GetProcess() int64 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *PosRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PosRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PosRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PosRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *PosRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *PosRequest) GetSentenceId() int64 {
	if x != nil {
		return x.SentenceId
	}
	return 0
}

func (x *PosRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *PosRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type Poses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Poses []*Pos `protobuf:"bytes,2,rep,name=poses,proto3" json:"poses,omitempty"`
}

func (x *Poses) Reset() {
	*x = Poses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poses) ProtoMessage() {}

func (x *Poses) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poses.ProtoReflect.Descriptor instead.
func (*Poses) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{30}
}

func (x *Poses) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Poses) GetPoses() []*Pos {
	if x != nil {
		return x.Poses
	}
	return nil
}

type Translation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id              int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	Item            string             `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	ObjectId        int64              `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Content         string             `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	TranslateEditor string             `protobuf:"bytes,5,opt,name=translate_editor,json=translateEditor,proto3" json:"translate_editor,omitempty"`
	TranslateGoogle string             `protobuf:"bytes,6,opt,name=translate_google,json=translateGoogle,proto3" json:"translate_google,omitempty"`
	LangFrom        string             `protobuf:"bytes,7,opt,name=lang_from,json=langFrom,proto3" json:"lang_from,omitempty"`
	LangTo          string             `protobuf:"bytes,8,opt,name=lang_to,json=langTo,proto3" json:"lang_to,omitempty"`
	Process         int32              `protobuf:"varint,9,opt,name=process,proto3" json:"process,omitempty"`
	Status          Translation_Status `protobuf:"varint,10,opt,name=status,proto3,enum=library.Translation_Status" json:"status,omitempty"`
}

func (x *Translation) Reset() {
	*x = Translation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translation) ProtoMessage() {}

func (x *Translation) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translation.ProtoReflect.Descriptor instead.
func (*Translation) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{31}
}

func (x *Translation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Translation) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *Translation) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *Translation) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Translation) GetTranslateEditor() string {
	if x != nil {
		return x.TranslateEditor
	}
	return ""
}

func (x *Translation) GetTranslateGoogle() string {
	if x != nil {
		return x.TranslateGoogle
	}
	return ""
}

func (x *Translation) GetLangFrom() string {
	if x != nil {
		return x.LangFrom
	}
	return ""
}

func (x *Translation) GetLangTo() string {
	if x != nil {
		return x.LangTo
	}
	return ""
}

func (x *Translation) GetProcess() int32 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *Translation) GetStatus() Translation_Status {
	if x != nil {
		return x.Status
	}
	return Translation_default_state
}

type Translations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Translations []*Translation `protobuf:"bytes,2,rep,name=translations,proto3" json:"translations,omitempty"`
}

func (x *Translations) Reset() {
	*x = Translations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Translations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translations) ProtoMessage() {}

func (x *Translations) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translations.ProtoReflect.Descriptor instead.
func (*Translations) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{32}
}

func (x *Translations) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Translations) GetTranslations() []*Translation {
	if x != nil {
		return x.Translations
	}
	return nil
}

type TranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Item            string   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	ObjectId        int64    `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Content         string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	TranslateEditor string   `protobuf:"bytes,5,opt,name=translate_editor,json=translateEditor,proto3" json:"translate_editor,omitempty"`
	TranslateGoogle string   `protobuf:"bytes,6,opt,name=translate_google,json=translateGoogle,proto3" json:"translate_google,omitempty"`
	LangFrom        string   `protobuf:"bytes,7,opt,name=lang_from,json=langFrom,proto3" json:"lang_from,omitempty"`
	LangTo          string   `protobuf:"bytes,8,opt,name=lang_to,json=langTo,proto3" json:"lang_to,omitempty"`
	Process         int32    `protobuf:"varint,9,opt,name=process,proto3" json:"process,omitempty"`
	Status          int32    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	Ids             []int64  `protobuf:"varint,11,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	ObjectIds       []int64  `protobuf:"varint,12,rep,packed,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"`
	Limit           int32    `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32    `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols            []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes        []string `protobuf:"bytes,19,rep,name=includes,proto3" json:"includes,omitempty"`
}

func (x *TranslationRequest) Reset() {
	*x = TranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslationRequest) ProtoMessage() {}

func (x *TranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslationRequest.ProtoReflect.Descriptor instead.
func (*TranslationRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{33}
}

func (x *TranslationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TranslationRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *TranslationRequest) GetObjectId() int64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *TranslationRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TranslationRequest) GetTranslateEditor() string {
	if x != nil {
		return x.TranslateEditor
	}
	return ""
}

func (x *TranslationRequest) GetTranslateGoogle() string {
	if x != nil {
		return x.TranslateGoogle
	}
	return ""
}

func (x *TranslationRequest) GetLangFrom() string {
	if x != nil {
		return x.LangFrom
	}
	return ""
}

func (x *TranslationRequest) GetLangTo() string {
	if x != nil {
		return x.LangTo
	}
	return ""
}

func (x *TranslationRequest) GetProcess() int32 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *TranslationRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TranslationRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *TranslationRequest) GetObjectIds() []int64 {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *TranslationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TranslationRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TranslationRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *TranslationRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `gorm:"primaryKey;not null;autoIncrement"`
	Id                int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" gorm:"primaryKey;not null;autoIncrement"`
	CreateId          int64            `protobuf:"varint,2,opt,name=create_id,json=createId,proto3" json:"create_id,omitempty"`
	CourseId          int64            `protobuf:"varint,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	DocumentId        int64            `protobuf:"varint,4,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ParagraphId       int64            `protobuf:"varint,5,opt,name=paragraph_id,json=paragraphId,proto3" json:"paragraph_id,omitempty"`
	VoiceId           int64            `protobuf:"varint,6,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	Fullname          string           `protobuf:"bytes,7,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Gender            string           `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Age               int32            `protobuf:"varint,9,opt,name=age,proto3" json:"age,omitempty"`
	Accent            int32            `protobuf:"varint,10,opt,name=accent,proto3" json:"accent,omitempty"`
	Avatar            string           `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Description       string           `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt         int64            `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status            Character_Status `protobuf:"varint,14,opt,name=status,proto3,enum=library.Character_Status" json:"status,omitempty"`
	SentenceCurrentId int64            `protobuf:"varint,15,opt,name=sentence_current_id,json=sentenceCurrentId,proto3" json:"sentence_current_id,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{34}
}

func (x *Character) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Character) GetCreateId() int64 {
	if x != nil {
		return x.CreateId
	}
	return 0
}

func (x *Character) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *Character) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *Character) GetParagraphId() int64 {
	if x != nil {
		return x.ParagraphId
	}
	return 0
}

func (x *Character) GetVoiceId() int64 {
	if x != nil {
		return x.VoiceId
	}
	return 0
}

func (x *Character) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *Character) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Character) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Character) GetAccent() int32 {
	if x != nil {
		return x.Accent
	}
	return 0
}

func (x *Character) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Character) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Character) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Character) GetStatus() Character_Status {
	if x != nil {
		return x.Status
	}
	return Character_default_state
}

func (x *Character) GetSentenceCurrentId() int64 {
	if x != nil {
		return x.SentenceCurrentId
	}
	return 0
}

type CharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateId    int64    `protobuf:"varint,2,opt,name=create_id,json=createId,proto3" json:"create_id,omitempty"`
	CourseId    int64    `protobuf:"varint,3,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	DocumentId  int64    `protobuf:"varint,4,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	ParagraphId int64    `protobuf:"varint,5,opt,name=paragraph_id,json=paragraphId,proto3" json:"paragraph_id,omitempty"`
	VoiceId     int64    `protobuf:"varint,6,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	Fullname    string   `protobuf:"bytes,7,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Gender      string   `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Age         int32    `protobuf:"varint,9,opt,name=age,proto3" json:"age,omitempty"`
	Accent      int32    `protobuf:"varint,10,opt,name=accent,proto3" json:"accent,omitempty"`
	Avatar      string   `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Description string   `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   int64    `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status      int32    `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	Limit       int32    `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset      int32    `protobuf:"varint,18,opt,name=offset,proto3" json:"offset,omitempty"`
	Cols        []string `protobuf:"bytes,16,rep,name=cols,proto3" json:"cols,omitempty"`
	Includes    []string `protobuf:"bytes,19,rep,name=includes,proto3" json:"includes,omitempty"`
	Ids         []int64  `protobuf:"varint,20,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CharacterRequest) Reset() {
	*x = CharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterRequest) ProtoMessage() {}

func (x *CharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterRequest.ProtoReflect.Descriptor instead.
func (*CharacterRequest) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{35}
}

func (x *CharacterRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CharacterRequest) GetCreateId() int64 {
	if x != nil {
		return x.CreateId
	}
	return 0
}

func (x *CharacterRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CharacterRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *CharacterRequest) GetParagraphId() int64 {
	if x != nil {
		return x.ParagraphId
	}
	return 0
}

func (x *CharacterRequest) GetVoiceId() int64 {
	if x != nil {
		return x.VoiceId
	}
	return 0
}

func (x *CharacterRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CharacterRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CharacterRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CharacterRequest) GetAccent() int32 {
	if x != nil {
		return x.Accent
	}
	return 0
}

func (x *CharacterRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CharacterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CharacterRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CharacterRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CharacterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CharacterRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CharacterRequest) GetCols() []string {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *CharacterRequest) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

func (x *CharacterRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Characters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Characters []*Character `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *Characters) Reset() {
	*x = Characters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Characters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Characters) ProtoMessage() {}

func (x *Characters) ProtoReflect() protoreflect.Message {
	mi := &file_library_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Characters.ProtoReflect.Descriptor instead.
func (*Characters) Descriptor() ([]byte, []int) {
	return file_library_proto_rawDescGZIP(), []int{36}
}

func (x *Characters) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Characters) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

var File_library_proto protoreflect.FileDescriptor

var file_library_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x06,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x0d,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10,
	0x02, 0x22, 0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd2, 0x02,
	0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22,
	0xe2, 0x01, 0x0a, 0x09, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a,
	0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x63, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x64, 0x6f, 0x63, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xab, 0x02, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xf8, 0x07, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73, 0x65, 0x6e,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x7a,
	0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x10, 0x04, 0x22, 0x58, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x79,
	0x65, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10,
	0x03, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0x53, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x10, 0x03, 0x22, 0x75, 0x0a,
	0x0a, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd3, 0x04, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd7, 0x04, 0x0a, 0x08, 0x53,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12,
	0x36, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x52, 0x05, 0x73, 0x70, 0x65, 0x61,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x35, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x10, 0x02, 0x22, 0x96, 0x02, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x64, 0x6f, 0x63, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x95, 0x04,
	0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0xa1, 0x03, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0x46, 0x0a, 0x06, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x6e, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x67, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x0a, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x54, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x96, 0x03, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0xfc, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x73, 0x22,
	0x9f, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x6d, 0x6d, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x6d, 0x6d, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10,
	0x02, 0x22, 0xb0, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6f,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x6d, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65,
	0x6d, 0x6d, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0e, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65,
	0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x74, 0x65,
	0x6e, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x65, 0x73, 0x22, 0xff, 0x04, 0x0a, 0x04, 0x4d, 0x65, 0x61,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73,
	0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x5f,
	0x74, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x54, 0x69, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x6d, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x6d, 0x6d, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72,
	0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x69, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x69, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x4d, 0x65, 0x61, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a,
	0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0x97, 0x05, 0x0a, 0x0b, 0x4d,
	0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x5f, 0x74, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x54, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x5f,
	0x66, 0x75, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x46,
	0x75, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x6d, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x6d, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x18, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x05, 0x4d, 0x65, 0x61, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x61,
	0x6e, 0x52, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x03, 0x50, 0x6f, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x62, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x67, 0x42, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x75,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x55, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x74, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x67, 0x54, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x61, 0x6e, 0x52, 0x05,
	0x6d, 0x65, 0x61, 0x6e, 0x73, 0x22, 0xf3, 0x02, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x62, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x42, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x61, 0x67, 0x5f, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x55, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x74, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x54, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x45, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x05, 0x50,
	0x6f, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x6f,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x22, 0xfa,
	0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x6e, 0x67, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0x5e, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x38, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbc, 0x03, 0x0a, 0x12,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x22, 0x85, 0x04, 0x0a, 0x09, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x10, 0x02, 0x22, 0xfa, 0x03, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x56, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x32, 0xb2, 0x04, 0x0a, 0x0e, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x12, 0x19, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x73, 0x12, 0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x12, 0x0f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x1a, 0x0f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x13, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x6f, 0x73,
	0x12, 0x3a, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x12, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x1a, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x51, 0x75, 0x61, 0x6e, 0x67,
	0x41, 0x6e, 0x68, 0x4d, 0x54, 0x41, 0x2f, 0x65, 0x6e, 0x74, 0x2d, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_library_proto_rawDescOnce sync.Once
	file_library_proto_rawDescData = file_library_proto_rawDesc
)

func file_library_proto_rawDescGZIP() []byte {
	file_library_proto_rawDescOnce.Do(func() {
		file_library_proto_rawDescData = protoimpl.X.CompressGZIP(file_library_proto_rawDescData)
	})
	return file_library_proto_rawDescData
}

var file_library_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_library_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_library_proto_goTypes = []interface{}{
	(Course_Status)(0),          // 0: library.Course.Status
	(Document_Status)(0),        // 1: library.Document.Status
	(Paragraph_Type)(0),         // 2: library.Paragraph.Type
	(Paragraph_Approved)(0),     // 3: library.Paragraph.Approved
	(Paragraph_Status)(0),       // 4: library.Paragraph.Status
	(Paragraph_ProcessAudio)(0), // 5: library.Paragraph.ProcessAudio
	(Sentence_Status)(0),        // 6: library.Sentence.Status
	(Audio_Status)(0),           // 7: library.Audio.Status
	(SearchEngine_Status)(0),    // 8: library.SearchEngine.Status
	(SentencePos_Status)(0),     // 9: library.SentencePos.Status
	(Mean_Status)(0),            // 10: library.Mean.Status
	(Translation_Status)(0),     // 11: library.Translation.Status
	(Character_Status)(0),       // 12: library.Character.Status
	(*Listen)(nil),              // 13: library.Listen
	(*CourseRequest)(nil),       // 14: library.CourseRequest
	(*Course)(nil),              // 15: library.Course
	(*Courses)(nil),             // 16: library.Courses
	(*DocumentRequest)(nil),     // 17: library.DocumentRequest
	(*Document)(nil),            // 18: library.Document
	(*Documents)(nil),           // 19: library.Documents
	(*ParagraphRequest)(nil),    // 20: library.ParagraphRequest
	(*Paragraph)(nil),           // 21: library.Paragraph
	(*Paragraphs)(nil),          // 22: library.Paragraphs
	(*SentenceRequest)(nil),     // 23: library.SentenceRequest
	(*Sentence)(nil),            // 24: library.Sentence
	(*Sentences)(nil),           // 25: library.Sentences
	(*AudioRequest)(nil),        // 26: library.AudioRequest
	(*Audio)(nil),               // 27: library.Audio
	(*Audios)(nil),              // 28: library.Audios
	(*CourseTagRequest)(nil),    // 29: library.CourseTagRequest
	(*CourseTag)(nil),           // 30: library.CourseTag
	(*CourseTags)(nil),          // 31: library.CourseTags
	(*SearchEngine)(nil),        // 32: library.SearchEngine
	(*SearchEngineRequest)(nil), // 33: library.SearchEngineRequest
	(*SearchEngines)(nil),       // 34: library.SearchEngines
	(*SentencePos)(nil),         // 35: library.SentencePos
	(*SentencePosRequest)(nil),  // 36: library.SentencePosRequest
	(*SentencePoses)(nil),       // 37: library.SentencePoses
	(*Mean)(nil),                // 38: library.Mean
	(*MeanRequest)(nil),         // 39: library.MeanRequest
	(*Means)(nil),               // 40: library.Means
	(*Pos)(nil),                 // 41: library.Pos
	(*PosRequest)(nil),          // 42: library.PosRequest
	(*Poses)(nil),               // 43: library.Poses
	(*Translation)(nil),         // 44: library.Translation
	(*Translations)(nil),        // 45: library.Translations
	(*TranslationRequest)(nil),  // 46: library.TranslationRequest
	(*Character)(nil),           // 47: library.Character
	(*CharacterRequest)(nil),    // 48: library.CharacterRequest
	(*Characters)(nil),          // 49: library.Characters
	(*transaction.Speak)(nil),   // 50: transaction.Speak
}
var file_library_proto_depIdxs = []int32{
	0,  // 0: library.Course.status:type_name -> library.Course.Status
	18, // 1: library.Course.documents:type_name -> library.Document
	15, // 2: library.Courses.courses:type_name -> library.Course
	1,  // 3: library.Document.status:type_name -> library.Document.Status
	21, // 4: library.Document.paragraphs:type_name -> library.Paragraph
	18, // 5: library.Documents.documents:type_name -> library.Document
	2,  // 6: library.Paragraph.type:type_name -> library.Paragraph.Type
	3,  // 7: library.Paragraph.approved:type_name -> library.Paragraph.Approved
	4,  // 8: library.Paragraph.status:type_name -> library.Paragraph.Status
	5,  // 9: library.Paragraph.process_audio:type_name -> library.Paragraph.ProcessAudio
	24, // 10: library.Paragraph.sentences:type_name -> library.Sentence
	21, // 11: library.Paragraphs.paragraphs:type_name -> library.Paragraph
	6,  // 12: library.Sentence.status:type_name -> library.Sentence.Status
	27, // 13: library.Sentence.audios:type_name -> library.Audio
	44, // 14: library.Sentence.translation:type_name -> library.Translation
	50, // 15: library.Sentence.speak:type_name -> transaction.Speak
	24, // 16: library.Sentences.sentences:type_name -> library.Sentence
	47, // 17: library.Sentences.characters:type_name -> library.Character
	7,  // 18: library.Audio.status:type_name -> library.Audio.Status
	27, // 19: library.Audios.audios:type_name -> library.Audio
	30, // 20: library.CourseTags.courseTags:type_name -> library.CourseTag
	8,  // 21: library.SearchEngine.status:type_name -> library.SearchEngine.Status
	15, // 22: library.SearchEngine.courses:type_name -> library.Course
	18, // 23: library.SearchEngine.documents:type_name -> library.Document
	21, // 24: library.SearchEngine.paragraphs:type_name -> library.Paragraph
	32, // 25: library.SearchEngines.search_engines:type_name -> library.SearchEngine
	9,  // 26: library.SentencePos.status:type_name -> library.SentencePos.Status
	35, // 27: library.SentencePoses.sentence_poses:type_name -> library.SentencePos
	10, // 28: library.Mean.status:type_name -> library.Mean.Status
	38, // 29: library.Means.means:type_name -> library.Mean
	38, // 30: library.Pos.means:type_name -> library.Mean
	41, // 31: library.Poses.poses:type_name -> library.Pos
	11, // 32: library.Translation.status:type_name -> library.Translation.Status
	44, // 33: library.Translations.translations:type_name -> library.Translation
	12, // 34: library.Character.status:type_name -> library.Character.Status
	47, // 35: library.Characters.characters:type_name -> library.Character
	14, // 36: library.LibraryService.ListCourses:input_type -> library.CourseRequest
	17, // 37: library.LibraryService.ListDocument:input_type -> library.DocumentRequest
	20, // 38: library.LibraryService.ListParagraph:input_type -> library.ParagraphRequest
	33, // 39: library.LibraryService.GetDataSearchEngine:input_type -> library.SearchEngineRequest
	23, // 40: library.LibraryService.ListSentence:input_type -> library.SentenceRequest
	23, // 41: library.LibraryService.StartLearnListen:input_type -> library.SentenceRequest
	13, // 42: library.LibraryService.EndLearnListen:input_type -> library.Listen
	42, // 43: library.LibraryService.GetPos:input_type -> library.PosRequest
	21, // 44: library.LibraryService.ApproveParagraph:input_type -> library.Paragraph
	16, // 45: library.LibraryService.ListCourses:output_type -> library.Courses
	19, // 46: library.LibraryService.ListDocument:output_type -> library.Documents
	22, // 47: library.LibraryService.ListParagraph:output_type -> library.Paragraphs
	34, // 48: library.LibraryService.GetDataSearchEngine:output_type -> library.SearchEngines
	25, // 49: library.LibraryService.ListSentence:output_type -> library.Sentences
	25, // 50: library.LibraryService.StartLearnListen:output_type -> library.Sentences
	13, // 51: library.LibraryService.EndLearnListen:output_type -> library.Listen
	41, // 52: library.LibraryService.GetPos:output_type -> library.Pos
	21, // 53: library.LibraryService.ApproveParagraph:output_type -> library.Paragraph
	45, // [45:54] is the sub-list for method output_type
	36, // [36:45] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_library_proto_init() }
func file_library_proto_init() {
	if File_library_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_library_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Courses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Documents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParagraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paragraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paragraphs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audios); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEngine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEngineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEngines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentencePos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentencePosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentencePoses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Means); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Translation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Translations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Characters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_library_proto_rawDesc,
			NumEnums:      13,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_library_proto_goTypes,
		DependencyIndexes: file_library_proto_depIdxs,
		EnumInfos:         file_library_proto_enumTypes,
		MessageInfos:      file_library_proto_msgTypes,
	}.Build()
	File_library_proto = out.File
	file_library_proto_rawDesc = nil
	file_library_proto_goTypes = nil
	file_library_proto_depIdxs = nil
}
