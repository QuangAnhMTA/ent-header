syntax = "proto3";

package transaction;
option go_package = "github.com/QuangAnhMTA/ent-header/transaction";




service TransactionService {
	// ---------------- Course -----------------
  rpc ListListen(ListenRequest) returns (Listen);
  rpc EndLearnListen(Listen) returns (Listen);
  rpc ListSpeak(SpeakRequest) returns (Speak);
  rpc EndLearnSpeak(Speak) returns (Speak);
}


  message Listen {
	// `gorm:"primaryKey;not null;autoIncrement"`
	int64 id = 1;
	int64 member_id = 2;
	int64 sentence_id =3;
	int64 paragraph_id = 4;
	int64 document_id = 5;
	int64 created_at = 6;
  }
  message ListenRequest {
	int64 id = 1;
	int64 member_id = 2;
	int64 sentence_id =3;
	int64 paragraph_id = 4;
	int64 document_id = 5;
	int64 created_at = 6;
	int32 limit =17;
	int32 offset = 18;
	repeated string cols = 16;
	repeated string includes =19;
  }

message Speak {
	// `gorm:"primaryKey;not null;autoIncrement"`
	int64 id = 1;
	int64 member_id = 2;
	int64 sentence_id =3;
	int64 paragraph_id = 4;
	int64 character_id = 5;
	int64 created_at = 6;
	float score = 7;
	string hash = 8;
	string keyx = 9;
	string format = 10;
	// `gorm:"-"`
	string color = 11;
}

message SpeakRequest {
	int64 id = 1;
	int64 member_id = 2;
	int64 sentence_id =3;
	int64 paragraph_id = 4;
	int64 character_id = 5;
	int64 created_at = 6;
	float score = 7;
	string hash = 8;
	string keyx = 9;
	string format = 10;
	int32 limit =17;
	int32 offset = 18;
	repeated string cols = 16;
	repeated string includes =19;
}