syntax = "proto3";

package library;
option go_package = "github.com/QuangAnhMTA/ent-header/library";


service LibraryService {
	// ---------------- Course -----------------
  rpc ListCourses(CourseRequest) returns (Courses);
  rpc ListDocument(DocumentRequest) returns (Documents);
  rpc FindDocument(DocumentRequest) returns (Document);
  rpc ListParagraph(ParagraphRequest) returns (Paragraphs);
  rpc FindParagraph(ParagraphRequest) returns (Paragraph);
  rpc CreateParagraph(Paragraph) returns (Paragraph);
  rpc GetDataSearchEngine(SearchEngineRequest) returns(SearchEngines);
  rpc ListSentence(SentenceRequest) returns (Sentences);
  rpc StartLearnListen(SentenceRequest) returns (Sentences);
  rpc EndLearnListen(Listen) returns (Listen);
  rpc GetPos(PosRequest) returns (Pos);
  rpc ApproveParagraph(Paragraph) returns (Paragraph);
  rpc ListSentencePos(SentencePosRequest) returns (SentencePoses);
  rpc GetSentenceDetail (SentenceRequest) returns (Sentence);
  rpc ListPronounce (PronounceRequest) returns (Pronounces);
  rpc GetPronounce (PronounceRequest) returns (Pronounce);
  rpc ListSentencePoses(SentencePosRequest) returns (SentencePoses);
  rpc ListKnowledge (KnowledgeRequest) returns (Knowledges);
  rpc GetKnowledge (Knowledge) returns (Knowledge);
  rpc ListTagDetail (TagDetailRequest) returns(TagDetails);
  rpc ListQuestion (QuestionRequest) returns(Questions);
  rpc ListAnswer  (AnswerRequest) returns (Answers);
  rpc GetAnswer(Answer) returns(Answer);
  rpc ListQuiz (QuizRequest) returns (Quizzes);
  rpc ListSentenceGroup(SentenceGroupRequest) returns (SentenceGroups);
  rpc ListTag(TagRequest) returns (Tags);
  rpc FindTag(TagRequest) returns (Tag);
  rpc UpdateSentences(Sentences) returns(Sentences);
  rpc UpdateSentenceGroup(SentenceGroup) returns (SentenceGroup);
  rpc CreateSentenceGroup(SentenceGroup) returns (SentenceGroup);
  rpc UpsertCharacter(Character) returns (Character);
  rpc ListCharacter(CharacterRequest) returns (Characters);
  rpc SortSentence(Sentences) returns (Sentences);
  rpc SortParagraph(Paragraphs) returns (Paragraphs);
  rpc UpsertSentence(Sentence) returns (Sentence);
  rpc TokenizeSentence(SentenceRequest) returns (Sentences);
  rpc SortSentenceGroup(SentenceGroups) returns (SentenceGroups);
  rpc ListTranslation(TranslationRequest) returns (Translations);
 }



 message Empty{
  string messages = 1;
  int32 number = 2;
}

message Listen {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 member_id = 2;
  int64 sentence_id =3;
  int64 paragraph_id = 4;
  int64 document_id = 5;
  int64 created_time = 6;
}


message CourseRequest {
  int64 id = 1;
  int64 account_id = 2;
  string title = 3;
  string image = 4;
  int32 type = 5;
  int32 subject = 6;
  int32 status = 7;
  repeated int64 course_ids = 9;
  repeated string preload = 10;
  int32 limit =11;
  int32 offset = 12;
  repeated string cols = 13;
  repeated string includes =14;
  repeated int64 ids = 15;
  int32 study_type = 16;

}

message Course {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 account_id = 2;
  string title = 3;
  string image = 4;
  int32 type = 5;
  int32 subject = 6;
  Status status = 7;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  repeated Document documents = 8;
  int32 study_type = 9;
  // `gorm:"-"`
  string title_vi = 11;
}

message Courses {
  repeated Course courses = 1;
  int64 total = 2;
}


message DocumentRequest {
  int64 id = 1;
  int64 course_id = 2;
  string title = 3;
  string image = 4;
  string content = 5;
  int32 status = 6;
  repeated string preload = 7;
  repeated int64 course_ids = 8;
  int32 limit =9;
  int32 offset = 10;
  repeated string cols = 11;
  repeated string includes =12;
  int64 current_id = 14;
  repeated int64 ids = 15;
  int64 group_id = 16;

}

message Document {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 course_id = 2;
  string title = 3;
  string image = 4;
  string content = 5;
  Status status = 6;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  repeated Paragraph paragraphs = 8;
  // `gorm:"-"`
  Course course = 9;
  // `gorm:"-"`
  string title_vi = 11;
 // `gorm:"-"`
 string description_vi = 12;
}

message Documents {
  repeated Document documents = 1 ;
  int64 total = 2;
  Course course = 6;
}

message ParagraphRequest {
  int64 id = 1;
  int64 document_id = 2;
  int32 type = 3;
  int32 position = 4;
  int32 status = 5;
  string title = 8;
  int32 limit =9;
  int32 offset = 10;
  repeated string cols = 11;
  repeated string includes =12;
  repeated int64 document_ids = 13;
  int64 current_id = 14;
  repeated int64 ids = 15;
	int64 course_id =16;
  string order_type = 17;
  string order_by = 18;
  string item = 26;
  int64 group_id = 27;
  string keyx = 39;
}

message Paragraph {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 approve_id = 2;
  int64 account_id = 3;
  int64 course_tag_id = 4;
  int64 object_id = 5;
  int64 course_id = 6;
  int64 document_id = 7;
  string title = 8;
  string image = 9;
  // `gorm:"text"`
  string description = 10;
  string location = 11;
  // `gorm:"text"`
  string location_description = 12;
  string level = 13;
  // Type type = 14; //1. Đoạn văn thường, 2. Hội thoại, 3. Quiz, 4. Ảnh
  // enum Type {
  //   default_type = 0;
  //   normal_paragraph = 1;
  //   conversation = 2;
  //   quiz = 3;
  //   image_paragraph = 4;
  // }
  float score = 14;
  int32 position = 15;
  // `gorm:"text"`
  string keywords = 16;
  string model = 17;
  // int32 process_bbsev5 = 18;
  int32 process_translate = 19;
  int32 process_sentence = 20;
  ProcessApprove process_approve= 21; // Duyệt nội dung / 1: Chưa, 2: Đã duyệt
  enum ProcessApprove {
    default_approved = 0;
    not_approved = 1 ;
    yes_approved = 2;
    again_approved= 3;
  }
  Status status = 22;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // ProcessAudio process_audio = 16; // Process audio / 1: Chưa xử lý, 2: Đã gửi job tạo audio, 3: Đã tạo xong audio
  // enum ProcessAudio {
  //   default_process_audio = 0;
  //   no_process = 1;
  //   processing = 2;
  //   done =3;
  // }

  // int32 process_te3s = 32;
  int64 approved_at = 33;
  string goals = 34;
  int64 created_at = 23;
  int64 duration = 35;
  // int64 updated_at = 19;
  // `gorm:"-"`
  repeated Sentence sentences = 24; 
  // `gorm:"-"`
  Document document =25;
  string item = 26;
  int64 updated_at = 27;
  // `gorm:"-"`
  int64 document_current_id = 28;
  // `gorm:"-"`
  int64 paragraph_current_id = 29;
  // `gorm:"-"`
  int64 course_current_id = 30;
  // `gorm:"-"`
  string ParagraphCurrentTitle = 31;
  // `gorm:"-"`
  repeated SentenceGroup sentence_groups = 32; 
  // `gorm:"-"`
  Course course =36;
  // `gorm:"-"`
  string title_vi =37;
   // `gorm:"-"`
 string description_vi = 38;
 string keyx = 39;
}

message Paragraphs {
  repeated Paragraph paragraphs = 1;
  int64 current_id = 3;
  int64 total = 2;
  int64 document_current_id = 4;
  int64 paragraph_current_id = 5;
  int64 course_current_id = 6;
  string paragraph_current_title = 8;
  Document document =7;
}

message SentenceRequest {
  int64 id = 1;
  int64 course_id = 2;
  int64 document_id = 3;
  int64 paragraph_id = 4;
  int64 character_id = 5;
  int64 voice_id = 6;
  string content = 7;
  string translate_google = 8;
  string translate_editor = 9;
  string keywords = 10;
  string words = 11;
  int32 process_voice = 12;
  int32 status = 13;
  int32 limit =14;
  int32 offset = 15;
  repeated string cols = 16;
  repeated string includes =17;
  repeated int64 ids = 18;
  repeated int64 character_ids = 19;
  int64 current_id = 20;
  int32 group = 27;
  int64 sentence_group_id = 28;
  repeated int64 sentence_group_ids = 29;
  int32 process_audio = 21;
  int32 process_content = 22;
  int32 process_pos = 23;
  int32 process_word = 24;
  int32 process_phrase = 25;
  int32 process_translate = 26;
  int32 position =31;
  string paragraph_content = 32;
  int32 start_position = 33;
  string member_exercise_token = 34;

}

message Sentence {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 course_id = 2;
  int64 document_id = 3;
  int64 paragraph_id = 4;
  int64 character_id = 5;
  string content = 6;
  // string keywords = 7;
  // string words = 8;
  int32 process_audio = 9;
  int32 process_grammar = 10;
  int32 process_pos = 11;
  int32 process_word = 12;
  int32 process_phrase = 14;
  int32 process_translate = 17;
  Status status = 13;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  repeated Audio audios = 15;
  // `gorm:"-"`
  Translation translation = 16;
  // `gorm:"-"`
  float score = 18;
  // `gorm:"-"`
  string color = 19;
  // `gorm:"-"`
  Paragraph paragraph = 21;
  string emotion = 22;
  string emoji = 23;
  // `gorm:"-"`
  repeated string words_arr = 24;
  // `gorm:"-"`
  repeated SentencePos sentence_poses = 25;
  // `gorm:"-"`
  repeated Phrase phrases = 26;
  int32 group = 27;
  int64 sentence_group_id = 28;
  int32 position = 29;
  int64 created_at = 30;
  int64 updated_at = 31;
  // `gorm:"-"`
  SentenceGroup sentence_group = 32;
}

message Sentences {
  repeated Sentence sentences = 1;
  int64 total = 2;
  repeated Character characters = 6;
  int64 document_current_id = 3;
  int64 paragraph_current_id = 4;
  int64 listen_sentence_current_id = 8;
  Paragraph pragraph = 7;
}

message AudioRequest {
  int64 id = 1;
  int64 sentence_id = 2;
  int64 voice_id = 3;
  string transcription_id = 4;
  int64 accent_id = 5;
  string title = 6;
  string language = 7;
  int32 gender = 8;
  float duration = 9;
  string url = 10;
  int64 length = 11;
  int64 count = 12;
  int32 process = 13;
  int64 created = 14;
  int32 status = 15;
  int32 limit =17;
  int32 offset = 18;
  string model = 21;
  repeated string cols = 16;
  repeated string includes =19;
  repeated int64 sentence_ids = 20;

}

message Audio {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 sentence_id = 2;
  int64 voice_id = 3;
  string transcription_id = 4;
  string keyx = 5;
  string format = 6;
  int32 speed = 7;
  float duration = 8;
  string url = 9;
  int64 size = 10;
  string version = 11;
  int32 process = 12;
  int64 created_at = 13;
  Status status = 14;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  string model = 15;
}

message Audios {
  repeated Audio audios = 1;
  int64 total = 2;
}




message CourseTagRequest {
  int64 id = 1;
  int64 course_id = 2;
  int64 tag_id = 3;
  int32 status = 4;
}

message CourseTag {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 course_id = 2;
  int64 tag_id = 3;
  int32 status = 4;
}

message CourseTags {
  repeated CourseTag courseTags = 1;
  int64 total = 2;
}


message SearchEngine {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  string item = 2;
  int64 object_id = 3;
  string title = 4;
  string content = 5;
  Status status = 6;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  int64 created = 7;
  // `gorm:"-"`
  repeated Course courses = 8;
  // `gorm:"-"`
  repeated Document documents = 9;
  // `gorm:"-"`
  repeated Paragraph paragraphs = 10;

}

message SearchEngineRequest {
  int64 id = 1;
  string item = 2;
  int64 object_id = 3;
  string title = 4;
  string content = 5;
  int32 status = 6;  
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
}

message SearchEngines{
  int32 total = 1;
  repeated SearchEngine search_engines = 2;
}


message SentencePos {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 sentence_id = 2;
  string word = 3;
  string lemma = 4;
  string pos = 5;
  string pos_group =6;
  int32 position =7;
  Status status = 8;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  string word_type = 11;
  // `gorm:"-"`
  string phonetic = 12; 
  // `gorm:"-"`
  string audio = 13; 
}

message SentencePosRequest {
  int64 id = 1;
  int64 sentence_id = 2;
  string word = 3;
  string lemma = 4;
  string pos = 5;
  string pos_group =6;
  int32 position =7;
  int32 status = 8;
  repeated int64 ids= 9;
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
}

message SentencePoses {
  int32 total = 1;
  repeated SentencePos sentence_poses = 2;
}

message Mean {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id =1 ;
  string word = 2;
  string lemma = 3;
  string pos = 4;
  string pos_group = 5;
  string phonetic = 6;
  string translate = 7;
  // `gorm:"text"`
  string definition = 8;
  // `gorm:"text"`
  string definition_vi = 9;
  int32 review = 10;
  Status status = 11;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  string example_vi = 12;
  string example = 13;
}

message MeanRequest {
  int64 id =1 ;
  int64 word_id = 2;
  string pos = 3;
  string pos_group = 4;
  string lemma = 8;
  string word = 9;
  string level = 10;
  string phonetic = 14;
  string translate = 15;
  string definition = 16;
  string definition_vi = 17;
  int32 review = 18;
  int32 status = 21; 
  int32 limit =22;
  int32 offset = 23;
  repeated string cols = 24;
  repeated string includes =25;
}

message Means {
  int32 total = 1;
  repeated Mean means = 2;
}



message Pos {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  string tag_bc = 2;
  string tag_un = 3;
  string tag_ti = 4;
  string title_en = 5;
  string title = 6;
  int64 process = 7;
  // `gorm:"-"`
  repeated Mean means = 8;
  // `gorm:"-"`
  Word word = 9;
  // `gorm:"-"`
  int64 sentence_pos_id = 10;
  // `gorm:"-"`
  string audio = 11;
}

message PosRequest {
  int64 id = 1;
  string tag_bc = 2;
  string tag_un = 3;
  string tag_ti = 4;
  string title_en = 5;
  string title = 6;
  int64 process = 7;
  int32 status = 8;
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
  int64 sentence_id = 20;
  string word = 21;
  int32 position =22;
  int64 sentence_pos_ids = 23;
  repeated string tag_bcs = 24;
  string member_exercise_token = 15;
}

message Poses {
  int32 total = 1;
  repeated Pos poses = 2;
}

message Translation {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  string item = 2;
  int64 object_id = 3;
  string content = 4;
  string translate_editor = 5;
  string translate_google = 6;
  string lang_from = 7;
  string lang_to = 8;
  string field = 9;
  Status status = 10;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  int64 created_at = 11;

}
message Translations {
  int32 total = 1;
  repeated Translation translations =2;
}

message TranslationRequest {
  int64 id = 1;
  string item = 2;
  int64 object_id = 3;
  string content = 4;
  string translate_editor = 5;
  string translate_google = 6;
  string lang_from = 7;
  string lang_to = 8;
  int32 process = 9;
  int32 status = 10; 
  string field = 15;
  repeated int64 ids = 11; 
  repeated int64 object_ids = 12;
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;

}

message Character {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 create_id = 2;
  int64 course_id = 3;
  int64 document_id = 4;
  int64 paragraph_id = 5;
  int64 voice_id = 6;
  string fullname = 7;
  string gender =8;
  string age = 9;
  int32 accent = 10;
  string avatar = 11;
  string description = 12;
  int64 created_at = 13;
  Status status = 14;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  int64 sentence_current_id = 15;
}

message CharacterRequest {
  int64 id = 1;
  int64 create_id = 2;
  int64 course_id = 3;
  int64 document_id = 4;
  int64 paragraph_id = 5;
  int64 voice_id = 6;
  string fullname = 7;
  string gender =8;
  int32 age = 9;
  int32 accent = 10;
  string avatar = 11;
  string description = 12;
  int64 created_at = 13;
  int32 status = 14;
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;  
  repeated int64 ids = 20; 
}

message Characters {
  int32 total = 1;
  repeated Character characters =2;
}


message VoiceUsing {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 paragraph_id = 2;
    int64 character_id = 3;
    int64 voice_id = 4;
}


message Voice {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    string supplier_voice_id = 2;
    string name = 3;
    string language = 4;
    string language_code = 5;
    string accent = 6;
    string age = 7;
    string loudness = 8;
    string gender = 9;
    string style = 10;
    string tempo = 11;
    string texture = 12;
    IsCloned is_cloned = 13;
    enum IsCloned {
      default_is_cloned = 0;
      no = 1;
      yes = 2;
    }
    string sample = 14;
    string voice_engine = 15;
    string model = 16;
}

message Phrase {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 sentence_id = 2;
    string words = 3;
    string label = 4;
    string head = 5;
    string translation =6;
    Status status = 7;  
    enum Status {
        default_state = 0;
        deactive = 1;
        active = 2;
    }
    // `gorm:"-"`
    Label label_detail  = 8;
}
message PhraseRequest {
  int64 id = 1;
  int64 sentence_id = 2;
  string words = 3;
  string label = 4;
  string head = 5;
  string translation =6;
  int32 status = 7;  
  repeated int64 ids = 11; 
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
}



message Phrases {
  int32 total = 1;
  repeated Phrase phrases =2;
}



message Example {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 sentence_id = 2;
    int64 mean_id = 3;
    Status status = 5;  
    enum Status {
        default_state = 0;
        deactive = 1;
        active = 2;
    }
}

message ExampleRequest {
  int64 id = 1;
  int64 sentence_id = 2;
  int64 mean_id = 3;
  int32 status = 5; 
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
}

message Examples {
  int32 total = 1;
  repeated Example examples =2;
}

message Word {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    string name = 2;
    string phonetic = 3;
    string phonetic_uk = 4;
    string phonetic_us = 5;
    int32 audio_download = 6;
    string audio_uk = 7;
    string audio_us = 8;
    // `gorm:"text"`
    string origin = 9;
    string see = 10;
    string suggests = 11;
    // `gorm:"text"`
    string info = 12;
    int32 processEnVi = 13;
    int32 processEnEn = 14;
    Status status = 15;  
    enum Status {
        default_state = 0;
        deactive = 1;
        active = 2;
    }
}
message WordRequest {
    int64 id = 1;
    string name = 2;
    string phonetic = 3;
    string phonetic_uk = 4;
    string phonetic_us = 5;
    int32 audio_download = 6;
    string audio_uk = 7;
    string audio_us = 8;
    string origin = 9;
    string see = 10;
    string suggests = 11;
    string info = 12;
    int32 processEnVi = 13;
    int32 processEnEn = 14;
    int32 status = 15; 
    int32 limit =17;
    int32 offset = 18;
    repeated string cols = 16;
    repeated string includes =19;
}


message Words {
  int32 total = 1;
  repeated Word words =2;
}


message Phonetic {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 word_id = 2;
    string word = 3;
    string text = 4;
    string audio = 5;
}
message PhoneticRequest {
  int64 id = 1;
  int64 word_id = 2;
  string word = 3;
  string text = 4;
  string audio = 5;
  repeated string words = 12;
  repeated int64 ids = 14;
  repeated int64 word_ids = 15;
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
}





message SentenceJob {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 sentence_id = 2;
  Process process = 3;
  enum Process {
    default_process = 0;
    processing = 1;
    success = 2;
    fail =3 ;
}
  Action action = 4;
  enum Action {
    default_action = 0;
    get_audio = 1;
    get_pos = 2;
    get_phrase = 3;
    get_traslation = 4;
    get_grammar = 5;
}
  int64 updated_at = 5;
  int64 created_at =6;
  int64 paragraph_id = 7;
  Status status = 8;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
}

message Pronounce {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    string word = 2;
    Type type = 3;
    enum Type  {
      default_type = 0;
      vowel = 1;
      consonant = 2;
    }
    // `gorm:"text"`
    string guide = 4;
    string examples = 5;
    string keyx = 6;
    string url = 7;
    // `gorm:"-"`
    repeated Phonetic phonetics = 8;
} 


message PronounceRequest {
  int64 id = 1;
  string word = 2;
  int32 type = 3;
  string guide = 4;
  string examples = 5;
  string keyx = 6;
  string url = 7;
  repeated string words = 12;
  repeated int64 ids = 14;
  int32 limit =17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
} 

message Pronounces {
  int32 total = 1;
  repeated Pronounce pronounces = 2;
}

message Knowledge {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 parent_id = 2;
  string title = 3;
  // `gorm:"text"`
  string definition = 4;
  // `gorm:"text"`
  string definition_vi = 5;
  // `gorm:"text"`
  string keywords =6;
  int32 limit = 7;
  int32 type = 8;
  int32 position = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
  Status status = 12;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  repeated KnowledgeExample knowledge_examples = 13;
}

message KnowledgeRequest {
  int64 id = 1;
  int64 parent_id = 2;
  string title = 3;
  string definition = 4;
  string definition_vi = 5;
  string keywords =6;
  int32 limit = 7;
  int32 type = 8;
  int32 position = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
  int32 status = 12;  
  repeated int64 ids = 14;
  repeated int64 parent_ids = 15;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19;
}

message Knowledges {
  repeated Knowledge knowledges = 1;
  int32 total = 2;
}



message KnowledgeExample {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 knowledge_id = 2;
    // `gorm:"text"`
    string content = 3;
    // `gorm:"text"`
    string content_vi = 4;
    string keyword = 5;
    string keyword_vi = 7;
    Status status = 6;  
    enum Status {
        default_state = 0;
        deactive = 1;
        active = 2;
    }
}

message KnowledgeExampleRequest {
  int64 id = 1;
  int64 knowledge_id = 2;
  string content = 3;
  string content_vi = 4;
  string keywords = 5;
  int32 status = 6; 
  repeated int64 ids = 14;
  repeated int64 knowledge_ids = 15;
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
}

message KnowledgeExamples {
  repeated KnowledgeExample knowledge_examples =1;
  int32 total = 2;
}


message Tag {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    string title = 2;
    Status status = 3;  
    enum Status {
        default_state = 0;
        deactive = 1;
        active = 2;
    }
    string item = 4;
    int64 parent_id = 5;
    string keyx = 6;
    int32 process_translate = 7;
    // `gorm:"-"`
    repeated Tag children_tags = 8;
}

message TagRequest {
    int64 id = 1;
    string title = 2;
    int32 status = 3; 
    string item = 4; 
    int64 parent_id = 5;
    string keyx = 6;
    int32 process_translate = 7;
    int32 limit = 17;
    int32 offset = 18;
    repeated int64 ids = 14;
    repeated string cols = 16;
    repeated string includes =19; 
}  

message Tags {
  int32 total = 1;
  repeated Tag tags = 2;
}

message TagDetail {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 tag_id = 2;
  string item = 3;
  int64 object_id = 4;
  Status status = 5;  
  enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
  }
  // `gorm:"-"`
  Tag tag = 6;
  // `gorm:"-"`
  Course course = 7;
  // `gorm:"-"`
  Document document = 8;
  // `gorm:"-"`
  Paragraph paragraph = 9;
  // `gorm:"-"`
  IsFavourite is_favourite = 10;
  enum IsFavourite {
      default_is_favourite = 0;
      no = 1;
      yes = 2;
  }
}

message TagDetailRequest {
  int64 id = 1;
  int64 tag_id = 2;
  string item = 3;
  int64 object_id = 4;
  int32 status = 5; 
  repeated int64 ids = 6;
  repeated int64 object_ids = 7; 
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 

}

message TagDetails {
  int32 total = 1;
  repeated TagDetail tag_details = 2;
  Tag tag = 3;
}


message Label {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    string keyx = 2;
    string title_en = 3;
    string title_vi = 4;
    string description_en = 5;
    string description_vi = 6;
    string example = 7;
    string explain_en = 8;
    string explain_vi = 9;
}



message LabelRequest {
    int64 id = 1;
    string keyx = 2;
    string title_en = 3;
    string title_vi = 4;
    string description_en = 5;
    string description_vi = 6;
    string example = 7;
    string explain_en = 8;
    string explain_vi = 9;
    int32 limit = 17;
    int32 offset = 18;
    repeated string cols = 16;
    repeated string includes =19; 
    repeated string keyxs = 20;
    repeated int64 ids = 21;
}

message Labels {
  int32 total = 1;
  repeated Label labels = 2;
}


message Question {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 quiz_id = 2;
    // `gorm:"text"`
    string content = 3;
    // `gorm:"text"`
    string description = 4;
    // `gorm:"text"`
    string translate = 5;
    string audio = 6;
    string image =7;
    int32 position = 8;
    int32 type =9;
    Status status = 10;  
    enum Status {
		default_state = 0;
		deactive = 1;
		active = 2;
	  }
    // `gorm:"-"`
    Quiz quiz = 11;
    // `gorm:"-"`
	  string question_format = 14;
	  // `gorm:"-"`
	  string answer_format = 15;
    int32 display = 16;
    string extra = 17;
}

message QuestionRequest {
  int64 id = 1;
  int64 quiz_id = 2;
  string content = 3;
  string description = 4;
  string translate = 5;
  string audio = 6;
  string image =7;
  int32 int32 = 8;
  int32 type =9;
  int32 status = 10;  
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
  repeated string keyxs = 20;
  repeated int64 ids = 21;
  repeated int64 quiz_ids = 22;
  int64 paragraph_id = 23;
  int64 course_id = 24;
  int64 document_id = 25;
  string question_format = 14;
  string answer_format = 15;
  int32 display = 26;
  string extra = 27;
}

message Questions {
  int32 total = 1;
  repeated Question questions = 2;
}

message Answer {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  int64 question_id = 2;
  // `gorm:"text"`
  string content = 3;
  // `gorm:"text"`
  string translate = 4;
  string audio = 5;
  string image = 6;
  int32 type = 7;
  Status status = 10;  
  enum Status {
		default_state = 0;
		deactive = 1;
		active = 2;
	}
  // `gorm:"-"`
  Question question = 11;
  int32 right = 12;
  // `gorm:"-"`
	string question_format = 14;
	// `gorm:"-"`
	string answer_format = 15;
}


message AnswerRequest {
  int64 id = 1;
  int64 question_id = 2;
  string content = 3;
  string translate = 4;
  string audio = 5;
  string image = 6;
  int32 type = 7;
  int32 status = 8;
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
  repeated string keyxs = 20;
  repeated int64 ids = 21;
  repeated int64 question_ids = 22;
  int32 right = 12;
  string question_format = 14;
  string answer_format = 15;
}

message Answers {
  int32 total = 1;
  repeated Answer answers = 2;
  int64 is_correct = 3;
  int64 token_quantity = 4;
}

message Quiz {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  string title = 2;
  Status status = 3;  
  enum Status {
		default_state = 0;
		deactive = 1;
		active = 2;
	}
  int64 paragraph_id = 4;
  int64 document_id = 5;
  int64 course_id = 6;

}

message QuizRequest {
  int64 id = 1;
  string title = 2;
  int32 status = 3;
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
  repeated string keyxs = 20;
  repeated int64 ids = 21; 
  int64 paragraph_id = 4;
  int64 document_id = 5;
  int64 course_id = 6;
}

message  Quizzes {
  int32 total = 1;
  repeated Quiz quizzes = 2;
}

message SentenceGroup {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 course_id = 2;
    int64 document_id = 3;
    int64 paragraph_id = 4;
    string keyword = 5;
    string emotion = 6;
    string emoji = 7;
    string keyx = 8;
    string format = 9;
    string image = 10;
    Status status = 11;  
    enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
    }
    int32 process_image = 12;
    int64 created_at = 13;
    int64 position = 14;
    int64 updated_at = 15;
    // `gorm:"-"`
    string content = 16;
    // `gorm:"-"`
    int64 pre_sentence_group_id = 17;
}

message SentenceGroupRequest {
  int64 id = 1;
  int64 course_id = 2;
  int64 document_id = 3;
  int64 paragraph_id = 4;
  string keyword = 5;
  string emotion = 6;
  string emoji = 7;
  string keyx = 8;
  string format = 9;
  string image = 10;
  int32 status = 11;
  int32 process_image = 12;
  int64 created_at = 13;
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
  repeated int64 ids = 21;
  repeated int64 sentence_ids = 23;
  int64 position = 22;
  repeated int64 paragraph_ids = 24;

}

message SentenceGroups {
  repeated SentenceGroup sentence_groups = 1;
  int32 total = 2;
}


message SentenceGrammar {
    // `gorm:"primaryKey;not null;autoIncrement"`
    int64 id = 1;
    int64 course_id = 2;
    int64 document_id = 3;
    int64 paragraph_id = 4;
    int64 sentence_id = 5;
    int64 person = 6;
    int64 tense = 7;
    int64 voice = 8;
    int64 form = 9;
    int64 condition = 10;
    int64 comparison = 11;
    int64 created_at = 12;
    int64 updated_at = 13;
    Status status = 14;  
    enum Status {
      default_state = 0;
      deactive = 1;
      active = 2;
    }
}


message SentenceGrammarRequest {
  int64 id = 1;
  int64 course_id = 2;
  int64 document_id = 3;
  int64 paragraph_id = 4;
  int64 sentence_id = 5;
  int32 person = 6;
  int32 tense = 7;
  int32 voice = 8;
  int32 form = 9;
  int32 condition = 10;
  int32 comparison = 11;
  int64 created_at = 12;
  int64 updated_at = 13;
  int32 status = 14;  
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
  repeated int64 ids = 21;
  repeated int64 sentence_ids = 23;
}

message SentenceGrammars {
  int32 total = 1;
  repeated SentenceGrammar sentence_grammars = 2;
}



message Media {
  // `gorm:"primaryKey;not null;autoIncrement"`
  int64 id = 1;
  string type = 2;
  string word = 3;
  string title = 4;
  string keyx = 5;
  string format = 6;
  int64 size = 7;
  int64 width = 8;
  int64 height = 9;
  int32 process = 10;
  int32 process_bbsev5 = 11;  
  int64 created_at = 13;
  int64 updated_at = 15;
  Status status = 14;  
  enum Status {
    default_state = 0;
    deactive = 1;
    active = 2;
  }
}


message MediaRequest {
  int64 id = 1;
  string type = 2;
  string word = 3;
  string title = 4;
  string keyx = 5;
  string format = 6;
  int64 size = 7;
  int64 width = 8;
  int64 height = 9;
  int32 process = 10;
  int32 process_bbsev5 = 11;  
  int64 created_at = 13;
  int64 updated_at = 15;
  int32 status = 14;  
  int32 limit = 17;
  int32 offset = 18;
  repeated string cols = 16;
  repeated string includes =19; 
  repeated int64 ids = 21;
  repeated string words = 23;
}


message Medias {
   int32 total = 1;
  repeated Media medias = 2;
}